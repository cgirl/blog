{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-Annie/source/css/Annie.styl","path":"css/Annie.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/css/comment.styl","path":"css/comment.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/Annie_qq_qrcode.jpg","path":"img/Annie_qq_qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/lazy.gif","path":"img/lazy.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/js/leancloud-count.js","path":"js/leancloud-count.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"source/image/nginx/访问上游服务器时可使用的变量.png","path":"image/nginx/访问上游服务器时可使用的变量.png","modified":0,"renderable":0},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/quote/danger.svg","path":"img/quote/danger.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/quote/info.svg","path":"img/quote/info.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/quote/quote-left.svg","path":"img/quote/quote-left.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/quote/success.svg","path":"img/quote/success.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/quote/warning.svg","path":"img/quote/warning.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/chinese/chinese.js","path":"plugin/chinese/chinese.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/clipboard/clipboard.js","path":"plugin/clipboard/clipboard.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/fancybox/jquery.fancybox.css","path":"plugin/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/natural-gallery.full.css","path":"plugin/gallerypage/natural-gallery.full.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/natural.css","path":"plugin/gallerypage/natural.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/imagelazyloader/yall.min.js","path":"plugin/imagelazyloader/yall.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/imageloaded/imagesloaded.pkgd.min.js","path":"plugin/imageloaded/imagesloaded.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/love/love.js","path":"plugin/love/love.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/resizediv/resizediv.js","path":"plugin/resizediv/resizediv.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/search/ziploader.js","path":"plugin/search/ziploader.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/toc/katelog.min.js","path":"plugin/toc/katelog.min.js","modified":0,"renderable":1},{"_id":"source/image/nginx/静态web服务器与反向代理.png","path":"image/nginx/静态web服务器与反向代理.png","modified":0,"renderable":0},{"_id":"source/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg","path":"image/qukuanlian/区块链:定义未来金融与经济新格局.jpg","modified":0,"renderable":0},{"_id":"themes/hexo-theme-Annie/source/plugin/comment/valine.min.js","path":"plugin/comment/valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/data.json","path":"plugin/gallerypage/data.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/natural-gallery.full.js","path":"plugin/gallerypage/natural-gallery.full.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/jquery/jquery.min.js","path":"plugin/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/nicescroll/jquery.nicescroll.js","path":"plugin/nicescroll/jquery.nicescroll.js","modified":0,"renderable":1},{"_id":"source/image/nginx/nginx http模块调用简化流程.png","path":"image/nginx/nginx http模块调用简化流程.png","modified":0,"renderable":0},{"_id":"themes/hexo-theme-Annie/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/fancybox/jquery.fancybox.js","path":"plugin/fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/images/default-skin.png","path":"plugin/gallerypage/images/default-skin.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/images/default-skin.svg","path":"plugin/gallerypage/images/default-skin.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/images/preloader.gif","path":"plugin/gallerypage/images/preloader.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/leancloud/av-min.js","path":"plugin/leancloud/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/plugin/motto/motto.js","path":"plugin/motto/motto.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-Annie/source/img/cart_cover.jpg","path":"img/cart_cover.jpg","modified":0,"renderable":1},{"_id":"source/image/nginx/反向代理服务器转发请求流程.png","path":"image/nginx/反向代理服务器转发请求流程.png","modified":0,"renderable":0},{"_id":"themes/hexo-theme-Annie/source/img/header-bg.jpg","path":"img/header-bg.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-Annie/.project","hash":"e74f16ba9e77ca103622e508e45cff12955f9018","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/LICENSE","hash":"c224e65a5fd27ee195e6d1a205ae12c278e50147","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/README.md","hash":"22f78fda73dea27f0a782b16530fbf4e8ae42a1a","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/_config.yml","hash":"6461cb94376f9caeb672d64a07051168835cc6b2","modified":1591923313325},{"_id":"source/.idea/misc.xml","hash":"e99da6bd4f0f8250fccc7fe4134e6c5d142ccfd9","modified":1591923231901},{"_id":"source/.idea/modules.xml","hash":"0d4d6df4a6d19c6b58126de4ec6d858fb56ee699","modified":1591923231901},{"_id":"source/.idea/source.iml","hash":"5859c9883f46f9f77ccdd22e90f71b82ef890b22","modified":1591923231901},{"_id":"source/.idea/workspace.xml","hash":"653ba4fcda87d34a66edb13e953f2e34c7471c91","modified":1591923231905},{"_id":"source/404/index.html","hash":"b74e38e322d86183d8865cd8dce465058e879e9c","modified":1591923231905},{"_id":"source/_posts/lumen.md","hash":"cb899ea901f7b95feaa8deb42be4186bcdc42668","modified":1591923231905},{"_id":"source/_posts/ngnix.md","hash":"9cbe628943093d2ae769a5d6a1c84087cee300e4","modified":1591923231905},{"_id":"source/categories/index.md","hash":"339974b06b0503c61ebe135af1c80acf3c3887df","modified":1591923231905},{"_id":"source/tags/index.md","hash":"4acd8c7315873605867d0b3be65ce4a4bf9efd58","modified":1591923231913},{"_id":"themes/hexo-theme-Annie/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/.git/config","hash":"9048bc7bf52cc35cd157878327fd032ffc201ea3","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/index","hash":"4ed718a32011299c65ace8122072624a0255463a","modified":1591933841021},{"_id":"themes/hexo-theme-Annie/.git/packed-refs","hash":"01a303a96e0fd48d31505e73a7bd9c1c67c9f232","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/languages/default.yml","hash":"5e989c01fddeaf74eb355512e3f1948af274ab9e","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/languages/en.yml","hash":"a16a32ea429a3b222c329296ce2758010d023978","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/languages/zh-CN.yml","hash":"290b1728a4ad75ed361cc00b4d9d80ee474eb196","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/languages/zh-TW.yml","hash":"ef76f849165403749cbdf71d9244262f2f872849","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/about.ejs","hash":"83b6fb6fc7e194dce4e0565a0066fa2dc1496838","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/gallery.ejs","hash":"1a440f00b762629bc33e5c568157c0d3e8f79514","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/index.ejs","hash":"0040e60b70d31d5d841d291d407ff9b6e8c7e011","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/layout.ejs","hash":"7eb75e119253ffb8809756b0aa9087d488ed9a8b","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/page.ejs","hash":"7ea1bad6d26c79b7baccbf452ca8a52113be2716","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/post.ejs","hash":"c1fe38aba639c318ba79eecab914c18c8272c818","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/scripts/colorquote.js","hash":"6afb13ee61b8aa95b293b588cc61b5052af92492","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/scripts/first-letter-sink.js","hash":"69f1409238f1589ea94e20e2c24b5130f9dad559","modified":1591923313329},{"_id":"source/.idea/copyright/profiles_settings.xml","hash":"434857451393ced0b77e7b66e7fe805223fc5845","modified":1591923231901},{"_id":"source/_posts/.idea/_posts.iml","hash":"5859c9883f46f9f77ccdd22e90f71b82ef890b22","modified":1591923231905},{"_id":"source/_posts/.idea/markdown-navigator.xml","hash":"fb624ba86edac4d5d3d056940d4c785a1a950db0","modified":1591923231905},{"_id":"source/_posts/.idea/misc.xml","hash":"e99da6bd4f0f8250fccc7fe4134e6c5d142ccfd9","modified":1591923231905},{"_id":"source/_posts/.idea/modules.xml","hash":"6abd6dcb985048745c9214d67295bdf1597307ee","modified":1591923231905},{"_id":"source/_posts/.idea/workspace.xml","hash":"4cbb08d6c02167e8dcc8adc161b5838957a3c4c5","modified":1591923231905},{"_id":"source/_posts/nginx/nginx200610.md","hash":"4478a61e7132f4b646b7e1e0887b44cda8c29e26","modified":1591923540966},{"_id":"source/_posts/qkl/qukuailian171214.md","hash":"92248d785f25fc45328d419f148ae301042d4722","modified":1591923231905},{"_id":"source/_posts/qkl/qukuailian171217.md","hash":"adfd3196dad9aaf57045bee8d1ca35b34b560103","modified":1591923231905},{"_id":"source/_posts/qkl/qukuailian171218.md","hash":"acc6daa90c6b114f47b8fbf5721b87f9bfa1c9fc","modified":1591923231905},{"_id":"source/_posts/study/20200612.md","hash":"c57a72c76cd696fda65ff313b64dacb303ea1a31","modified":1592373938649},{"_id":"source/_posts/study/web_666.md","hash":"65e0d528c2a9f3c8566d59fdf5fa9cb22b348269","modified":1591940625124},{"_id":"themes/hexo-theme-Annie/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1591923299805},{"_id":"themes/hexo-theme-Annie/.git/logs/HEAD","hash":"b5d6a103e02c329d37b305338bc99a6e348ae9ce","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/.github/ISSUE_TEMPLATE/bug_report.md","hash":"d032cefa84810dc7432c14da8ed30bef38558ada","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/.github/ISSUE_TEMPLATE/feature_request.md","hash":"e751c04e5ba9c084e904208360bc15b0c7291c53","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/.github/ISSUE_TEMPLATE/general-issue.md","hash":"4af71474cda52243b3e23d8dd3dae1463c878eb5","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/.github/ISSUE_TEMPLATE/pull-request.md","hash":"c06eb5ad4ddeefd7cf4ff254a2c11938eb795b7c","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/archive.ejs","hash":"330c868ac032afd4a571e2ebafd2a632f591c12d","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/footer-after.ejs","hash":"600b0842f473d6ecd8d477a1940a43cfcb26ee79","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/footer-social.ejs","hash":"0bc14a7ccd7f6ee3e0a176aef5793b0464fae4c9","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/footer.ejs","hash":"9238b49a9a01a4368af26b49e824909083a99d70","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/head.ejs","hash":"870d6c01bafdce39cf92831c348118468d3c6684","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/header.ejs","hash":"93afcd6423c5f3c782503f1104a11d0e412e27de","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/index-cart.ejs","hash":"8ec5ba1627ae200e477671c8581d30810e1c2f43","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/index-pure.ejs","hash":"0c65a64f743e13b6c31049f2e58815e004fd4452","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/nav.ejs","hash":"3dd3d39762db6b880e1ce7d880cac34fe32fbde9","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/page-header.ejs","hash":"8893f640792fdf23f03dd982a1c34f80fa0bef9d","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/page.ejs","hash":"82989821a8b8a7d173502f448b6f39bbb665e483","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/paginator.ejs","hash":"4bc4131fff9ee7ac15ac8375cff767cbcc86969f","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/post-like.ejs","hash":"17d57526e1cefb78b09ef115fa97d56655707cb7","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post-number.ejs","hash":"bbca519feda03103f905fac6a453192035875e40","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post-relate.ejs","hash":"78b0d3da73fb5fdfe51bda19e64814e28bf88103","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post.ejs","hash":"4e8aaf938c6c261d752183c968018a64652321d7","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/Annie.styl","hash":"5c917d6abf0e5494e9c4de3ac2f9e6b41326c73f","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/comment.styl","hash":"e38672bfa1bc3fcc54829c48c0d4d49df42200d0","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/img/Annie_qq_qrcode.jpg","hash":"571f514f6ef9b4e085bb9c74523eade02a84e8ea","modified":1591923313337},{"_id":"themes/hexo-theme-Annie/source/img/lazy.gif","hash":"0bbc5084e6aaa8d6260645c49abc45659553f464","modified":1591923313341},{"_id":"themes/hexo-theme-Annie/source/img/logo.png","hash":"6753531813b7157625c4eca2531d08edc65f846b","modified":1591923313341},{"_id":"themes/hexo-theme-Annie/source/js/leancloud-count.js","hash":"3d713d7b5e9f473a8c44b2cc64f211568bac8c90","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/js/main.js","hash":"5c090a6312edcfee22d1a0b3a760cd467d9982bd","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/js/search.js","hash":"1a1bfdbf2ea98d387925f63246c15ef9e9556fef","modified":1591923313345},{"_id":"source/_posts/.idea/copyright/profiles_settings.xml","hash":"434857451393ced0b77e7b66e7fe805223fc5845","modified":1591923231905},{"_id":"source/_posts/.idea/markdown-navigator/profiles_settings.xml","hash":"1342eb8689c2186a910d976268875318620fa589","modified":1591923231905},{"_id":"source/image/nginx/访问上游服务器时可使用的变量.png","hash":"531a348d461c2ac627401386d6dc39109504a76f","modified":1591923231909},{"_id":"themes/hexo-theme-Annie/.git/objects/pack/pack-75f0d8352ee6c8333b859fca4122c856ad45f7d3.idx","hash":"3882b7bfb152f67ada0c98b528396eb81f2c3a24","modified":1591923313047},{"_id":"themes/hexo-theme-Annie/.git/refs/heads/master","hash":"2652352a0e26444721f473da1ab1a86f48a47234","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/layout/_partial/custom/XXX.ejs","hash":"bc338dc74c1b2d4668f8149b78d348c945a28d50","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/clipboard.ejs","hash":"b0c76a76c31abbed1255b057c8a9789294164bbe","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/comment.ejs","hash":"878a0cb2cb5fb6111b34e7ecb22572c7cb67369c","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/mathjax.ejs","hash":"4ddeccccdbf54fae9b0aebbf3df6c93215d7319d","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/motto.ejs","hash":"8c5177ba00c8017e1ebf25829866a7c461cb987c","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/search.ejs","hash":"8b0f064a55f9b44bb282d2bbb8065e273379a45d","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/share.ejs","hash":"5f438692d12423e910307feaa210b5ab6a2a272b","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics.ejs","hash":"da3b8578df4b11575690a90e9d6cf1815eae99ee","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/toc.ejs","hash":"21a3a302e9feee793bde4c942433726a7a175f23","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post/category.ejs","hash":"4c89f93ff34f620df53fb778e7005c658fcef05c","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post/date.ejs","hash":"faf8da7eb617454a6e1e728af9ffc50fa17e3997","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post/gallery.ejs","hash":"ba5f8d33d5cbc0e14709a9c9ba3d1b5f6c75cf3e","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post/navigation.ejs","hash":"95cc8c6c893abacbfa793cb88501b247f26c0aae","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post/tag.ejs","hash":"77a5a0a40dad69716e9980a0ae81af93fd05a1d3","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/post/title.ejs","hash":"8c62c05b4f9df9e43d0c20c283a750d25ece6074","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/widget/totop.ejs","hash":"7c88fcda5e4e4d9dc03ca516f4db7968a0a5c5a5","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_base/base.styl","hash":"dca7912cc5876f63dc96e2cc0924a760829fd324","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_base/icomoon.styl","hash":"79cec8bab5ed326bf9c6c326860e78a97f7bd48f","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_base/normalize.styl","hash":"8b6cd89a691833ec86f6bee54c825ce32964b15a","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/animation.styl","hash":"f30ef021bc9107ef542d26638606089718e214ca","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/backtotop.styl","hash":"160f8ce6bc7fac15367b83e01ee0e54f67df6b26","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/comment.styl","hash":"1f0cb38772b2401f750cf0d7d808842e030b53b2","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/component.styl","hash":"92c86e9241a4e307a941b23e13f5c33206857a69","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/menu.styl","hash":"466f278d6e3990014c8b8ed429a1506d2c8e220b","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/pagination.styl","hash":"26c9100d451bab9e235bbb0c9b52d29a9b07a73d","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/preloader.styl","hash":"10f6a20767f772dd3bf6f044e6f05164cf5e51e4","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/progressbar.styl","hash":"f5ba35a421a202a07ff3fd78aa5daa8d64aef830","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/scrollbar.styl","hash":"a650f916abb93942157aae0607caa6d22e7cbf63","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/search.styl","hash":"5f0ad81dbb74003b347a726b53bc3dc86be07e70","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/share.styl","hash":"63b5e771f37f4b370eb7fbdddd4b99b495b2a33e","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/toc.styl","hash":"b4b5834657f86e6244ba0393297d862df3c975c1","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_custom/custom.styl","hash":"2ae6d3186ef76677795162ecd3a537e236181d98","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_helper/variable.styl","hash":"0fae4f9c8769f2b21e076a9befaf55e8674d07fe","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_layout/footer.styl","hash":"055027b9f7b5fcff38ae77532ce07fbcddde66a7","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_layout/header.styl","hash":"0fcedd0eb8f14e22869da83268b19fab1fac423a","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_mobile/mobile.styl","hash":"579f3c95ff569b179327194d666caab43464ec11","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/about.styl","hash":"8ac0926f60d5a5e29e03caebea331dfb225a72ef","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/archive.styl","hash":"db223f6984c0f0a316f29cd94f9ea68367bac726","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/category.styl","hash":"bd257bfb875ab0a4c8f04742e8c6c28235346387","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/gallery.styl","hash":"677c9cc90c9c0f97ee6f4766561fbaceb15584bb","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/index.styl","hash":"ed09eef30d13beed6fd9716f25de7e8351e5cc47","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/page.styl","hash":"0ba62ad87c5ef004870f5a3dc4c9ba0303771ce8","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/post.styl","hash":"d328911b729d27048c763511aa434ff71d839b10","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/_page/tag.styl","hash":"d2e5ec8ab09ddb686d78b013072788f5970d45cf","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.eot","hash":"8b0e8a844b0db44cd73419c55ab9054e90844cf3","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.ttf","hash":"7f5ba460f1c534dffd1f1bd92fa381fe93c6e8bc","modified":1591923313337},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.woff","hash":"4a4bcec7a051735d1fa587af3e53c6a9270dca79","modified":1591923313337},{"_id":"themes/hexo-theme-Annie/source/img/quote/danger.svg","hash":"b2db56f2cc13fce73dbea46c7b446d9bcb3bf0fd","modified":1591923313341},{"_id":"themes/hexo-theme-Annie/source/img/quote/info.svg","hash":"c8aa387e935ba9a7fa72c5dd000b7d46f2e030c4","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/img/quote/quote-left.svg","hash":"d2561fa8d13e63ff196b71232a5968415ec6e372","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/img/quote/success.svg","hash":"029b8b3523b7daa4005983b4463cd93408308aab","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/img/quote/warning.svg","hash":"7153fa2a0c21e32da6a1f96a333d8b66a178569d","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/chinese/chinese.js","hash":"986dfdf6f27852151e2225aaaa22d2302d5d24dc","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/clipboard/clipboard.js","hash":"43d4af727a32a793d9146eb828ed114e3ca29cec","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/fancybox/jquery.fancybox.css","hash":"7a81dceacd45c9249b1da50c3a51eb6aec68424c","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/natural-gallery.full.css","hash":"d5c5ff93bf13e2d4ece69ccaa6cd72a2486daba0","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/natural.css","hash":"8014a4791f5789e55aa8921def9eb93b3f31d48d","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/imagelazyloader/yall.min.js","hash":"59e3ca7c5cc98368156826ea857fa1a8dea6aaa4","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/imageloaded/imagesloaded.pkgd.min.js","hash":"6d3e11174e22668e69df236e5c4542168f7cbfec","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/love/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1591923313353},{"_id":"themes/hexo-theme-Annie/source/plugin/resizediv/resizediv.js","hash":"1b3e3eb33aee0de1f02384dbdbd3941716e0fda5","modified":1591923313353},{"_id":"themes/hexo-theme-Annie/source/plugin/search/ziploader.js","hash":"93c976bea5ae21811807cf27b4ca8c3c94640b04","modified":1591923313353},{"_id":"themes/hexo-theme-Annie/source/plugin/toc/katelog.min.js","hash":"7acaa9e4a1a3689b84382c1814b58b1168c57e2c","modified":1591923313353},{"_id":"source/image/nginx/静态web服务器与反向代理.png","hash":"f5a99510edfc926051667608e8514590d9946793","modified":1591923231913},{"_id":"source/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg","hash":"502e53d791b534cc1efe03a58f33357b3770dc7c","modified":1591923231913},{"_id":"themes/hexo-theme-Annie/source/plugin/comment/valine.min.js","hash":"0c698e2d51cdc0d2eb303c8c3a81ddd6d6cf667f","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/data.json","hash":"b1af217109ef799dd029e9bd0d2a41f946702781","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/natural-gallery.full.js","hash":"5b3dfb0b5279055706c57484e14c8dac321be7e8","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/jquery/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/nicescroll/jquery.nicescroll.js","hash":"25b8db3ad673a4661334b1cdeaf37ed881ffd17c","modified":1591923313353},{"_id":"source/image/nginx/nginx http模块调用简化流程.png","hash":"d9a873b25b80c78e559c181fb64e7c9f1610e142","modified":1591923231905},{"_id":"themes/hexo-theme-Annie/.git/logs/refs/heads/master","hash":"b5d6a103e02c329d37b305338bc99a6e348ae9ce","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/clipboard/code-copy.ejs","hash":"abb3d1e602c3eb8fc774bedd2432a3e3fc1c55e5","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/comment/gitalk.ejs","hash":"532d99ba38db222f0a77b21283e128e93c15b809","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/comment/livere.ejs","hash":"2e3567bc92eaf9eaa9104063073d275109edf312","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/comment/valine.ejs","hash":"65ea46b14fe5724472046dd1a7169f963d720174","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/share/addThis.ejs","hash":"9cfc3545769c6d26916e909e93d69b4653d960a9","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/share/baidu-share.ejs","hash":"f110e432b633f6335f5b49dc9640d55450b34632","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/share/shareThis.ejs","hash":"e78f98551a3a27e8256d8eb278267a95485648f1","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/share/social-share.ejs","hash":"f38a4e16f6c1ab39888cb0641cbbb346aa5d4c90","modified":1591923313325},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/baidu-analytics.ejs","hash":"1805f5c41145dbf3e56d030b2cc0083030ec6d9f","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/busuanzi.ejs","hash":"806f5ba2d3eb9d9230713d476761f11a7d38dd54","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/cnzz_analytics.ejs","hash":"a16b8110f98b0cd940d5d3dd4f41d7efcb755e97","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/google_analytics.ejs","hash":"470c58516777e6b16fdc00b529669631c826d7c6","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/leancloud.ejs","hash":"1ef9848c46e8c2270ec0b0a010c97ca64bc3c57a","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/tencent_analytics.ejs","hash":"4d1873b38be4510a5d93db27878d9ff7de5400d3","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/layout/_partial/plugin/statistics/topN-post.ejs","hash":"5530110b6ed90c95165a2de1decb66f370f1ef51","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_hexotags/colorquote.styl","hash":"d0c78c5cb2f477454b2bd8f2ed555420cb60ceaf","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_hexotags/first-letter-sink.styl","hash":"997d548725ea59e9142f90fd7b94c7f293023992","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_highlight/_code-copy.styl","hash":"ee51a7bcdae3c109c78f9f0b8f31a5e93291e53b","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_highlight/_diff.styl","hash":"ef9a09da02e61982a0a7adc2a609e0ab2f9c83eb","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_highlight/_theme.styl","hash":"53a02db002bd1062f4b55684b4cc268df7be578f","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_highlight/_variables.styl","hash":"3c84c1b2ea98abc97490190ae8f85b5a865b24e3","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/css/_component/_highlight/highlight.styl","hash":"99dc7738c2666901262ece43c0e4dd68204fb597","modified":1591923313329},{"_id":"themes/hexo-theme-Annie/source/img/favicon.ico","hash":"92da6723b6526aa98c23501e6086c5948a13083c","modified":1591923313341},{"_id":"themes/hexo-theme-Annie/source/plugin/fancybox/jquery.fancybox.js","hash":"c4461bc0cacd6a1d58885ca0f466ba1b7562c85d","modified":1591923313345},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/images/default-skin.png","hash":"f6c7bd39c5ceda639276e64447f6007ad28ac0dd","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/images/default-skin.svg","hash":"bf61aaab4ee361ac7537b68abee8780ac6fd22f3","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/gallerypage/images/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1591923313349},{"_id":"themes/hexo-theme-Annie/source/plugin/leancloud/av-min.js","hash":"d16c3eb20daa240feea36cc607a2e8a22ac66f81","modified":1591923313353},{"_id":"themes/hexo-theme-Annie/source/css/fonts/icomoon.svg","hash":"6e165b0a2f3497478b00503fe85c38e1c6e05e4d","modified":1591923313333},{"_id":"themes/hexo-theme-Annie/.git/logs/refs/remotes/origin/HEAD","hash":"b5d6a103e02c329d37b305338bc99a6e348ae9ce","modified":1591923313297},{"_id":"themes/hexo-theme-Annie/source/plugin/motto/motto.js","hash":"282eac08d66a6e14f1b170cf1dbea67e53fba436","modified":1591923313353},{"_id":"themes/hexo-theme-Annie/source/img/cart_cover.jpg","hash":"5c9561c6cc4637a1cfc03fb0399883f052e3340b","modified":1591923313337},{"_id":"source/image/nginx/反向代理服务器转发请求流程.png","hash":"f824d328add787793b2e973cdddf13f0ebebe670","modified":1591923231909},{"_id":"themes/hexo-theme-Annie/source/img/header-bg.jpg","hash":"509748b7822d48d510476d6168c96cc09d6d7502","modified":1591923313341},{"_id":"themes/hexo-theme-Annie/.git/objects/pack/pack-75f0d8352ee6c8333b859fca4122c856ad45f7d3.pack","hash":"3a1941a7c131a2f28259ff090e1631af2fe2dc54","modified":1591923313047},{"_id":"public/atom.xml","hash":"09925f94144980c1b9658997617f2f817ab6aa48","modified":1592377996821},{"_id":"public/search.xml","hash":"dd9f2e4f121eaa676cc970fecd879d04e416ca34","modified":1592377997109},{"_id":"public/404/index.html","hash":"6eea5316cdc7ff935b0b53ee2e84d401a01a6e4c","modified":1591940630727},{"_id":"public/categories/index.html","hash":"ab1ac24e3d5bc40f12258b4b64c5d935ee25f2e0","modified":1592377723842},{"_id":"public/tags/index.html","hash":"b8fccf030f17a9c7ebcc04bdc3283f17a9f70380","modified":1592377723894},{"_id":"public/archives/2017/07/index.html","hash":"99ec3683e119b42c0f2b673686bfb206b352c5c0","modified":1592377723895},{"_id":"public/archives/2017/11/index.html","hash":"a1483366fe2840c4550101de10a94c57d4c0a5c4","modified":1592377723895},{"_id":"public/archives/2017/12/index.html","hash":"72e25a5b77c19193b570b47d7dbd3048ae6d23d5","modified":1592377723895},{"_id":"public/archives/2020/index.html","hash":"c90c8120420e71b7ef096c7ee28055a2aa49e546","modified":1592377723897},{"_id":"public/archives/2020/06/index.html","hash":"7754c65ee5ddf3e106d1d24e20cf6fea35765a9a","modified":1592377723898},{"_id":"public/categories/lumen框架/index.html","hash":"d9f4945ec1a1bd3907ab7086983c3bfabf9e0b54","modified":1592377723895},{"_id":"public/categories/nginx/index.html","hash":"52805cc91489dd78753731df1abb571cef6b2cc8","modified":1592377723895},{"_id":"public/categories/技术架构/index.html","hash":"e9b22a40d87101b4c02c8b8c2640dcc4ea60a9b6","modified":1592377723895},{"_id":"public/categories/区块链-定义未来金融与经济新格局/index.html","hash":"a4f2679b011d5beeea4b374b64dd12f31fe9cb77","modified":1592377723897},{"_id":"public/categories/学习收录/index.html","hash":"220f5b8d9a91d5833f51016c735d1a0c3147d2db","modified":1592377723895},{"_id":"public/categories/每日计划/index.html","hash":"35a12014076750cd64f7ab2c79b6acc7414ce0e2","modified":1592377723897},{"_id":"public/index.html","hash":"eb63ddeb5978586fd5be609a0c8f081c3d4b3185","modified":1592377723898},{"_id":"public/tags/php-框架-lumen-API/index.html","hash":"08406c5c515cfb96ecfe21829e79af4972a6913f","modified":1592377723895},{"_id":"public/tags/nginx-负载均衡-配置/index.html","hash":"57537f6f9fbbf97f3d81318869aff3e4c9873100","modified":1592377723895},{"_id":"public/tags/nginx/index.html","hash":"695a4a64e77ae29027daeacfac3d5204fafc5ced","modified":1592377723896},{"_id":"public/tags/读书摘录-区块链/index.html","hash":"0a13d37424ea4ab59d5feb13e2b652cbacdd933c","modified":1592377723898},{"_id":"public/tags/学习清单/index.html","hash":"5c1e2b02635165ce2d593cc4d3a8a30fbadde11e","modified":1592377723898},{"_id":"public/2020/06/12/study/web_666/index.html","hash":"a574eba06c480a0cbef4a07533c12dace00b4ba6","modified":1592377997124},{"_id":"public/2020/06/12/study/20200612/index.html","hash":"845a51b811b48fa3ba42ed1fa5c72d84a6cb67b4","modified":1591941952453},{"_id":"public/2020/06/12/nginx/nginx200610/index.html","hash":"00fd1612fb3567bebc731bfe1ef6908fab9f1fe1","modified":1592377997124},{"_id":"public/2017/12/17/qkl/qukuailian171218/index.html","hash":"55450c1600838e03867332a866a68af429831157","modified":1592377997125},{"_id":"public/2017/12/17/qkl/qukuailian171217/index.html","hash":"9fc2eb306d015f18e50a94da66f27640afb157f9","modified":1592377997125},{"_id":"public/2017/11/12/qkl/qukuailian171214/index.html","hash":"6c920800da6d9a4544fa628a0aa4914aeceba4c5","modified":1592377997125},{"_id":"public/2017/07/13/ngnix/index.html","hash":"e82dc652c9a3a1b5e397c540d48077ff491a03f7","modified":1592377997125},{"_id":"public/2017/07/08/lumen/index.html","hash":"9c5b8e8a1e9ad479a1e7e3e2256c65c877aafbd9","modified":1592377997125},{"_id":"public/archives/index.html","hash":"28f2030f33e7bb1180ea2c8868ccd730c1f688cc","modified":1592377723897},{"_id":"public/archives/2017/index.html","hash":"28f8e949e25585b4730804dcf90ed19cf6f63bd8","modified":1592377723897},{"_id":"public/tags/程序员-优秀网站/index.html","hash":"05a49b97127259476435dd9024c461aa57a2d729","modified":1592377723896},{"_id":"public/img/Annie_qq_qrcode.jpg","hash":"571f514f6ef9b4e085bb9c74523eade02a84e8ea","modified":1591940630759},{"_id":"public/img/lazy.gif","hash":"0bbc5084e6aaa8d6260645c49abc45659553f464","modified":1591940630759},{"_id":"public/img/logo.png","hash":"6753531813b7157625c4eca2531d08edc65f846b","modified":1591940630759},{"_id":"public/css/fonts/icomoon.eot","hash":"8b0e8a844b0db44cd73419c55ab9054e90844cf3","modified":1591940630759},{"_id":"public/css/fonts/icomoon.ttf","hash":"7f5ba460f1c534dffd1f1bd92fa381fe93c6e8bc","modified":1591940630759},{"_id":"public/css/fonts/icomoon.woff","hash":"4a4bcec7a051735d1fa587af3e53c6a9270dca79","modified":1591940630759},{"_id":"public/img/quote/danger.svg","hash":"b2db56f2cc13fce73dbea46c7b446d9bcb3bf0fd","modified":1591940630760},{"_id":"public/img/quote/info.svg","hash":"c8aa387e935ba9a7fa72c5dd000b7d46f2e030c4","modified":1591940630760},{"_id":"public/img/quote/quote-left.svg","hash":"d2561fa8d13e63ff196b71232a5968415ec6e372","modified":1591940630760},{"_id":"public/img/quote/success.svg","hash":"029b8b3523b7daa4005983b4463cd93408308aab","modified":1591940630760},{"_id":"public/img/quote/warning.svg","hash":"7153fa2a0c21e32da6a1f96a333d8b66a178569d","modified":1591940630760},{"_id":"public/plugin/gallerypage/images/default-skin.png","hash":"f6c7bd39c5ceda639276e64447f6007ad28ac0dd","modified":1591940630760},{"_id":"public/plugin/gallerypage/images/default-skin.svg","hash":"bf61aaab4ee361ac7537b68abee8780ac6fd22f3","modified":1591940630760},{"_id":"public/plugin/gallerypage/images/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1591940630760},{"_id":"public/css/comment.css","hash":"22cfb29c7d04da36aaa306aebed8496380efefc1","modified":1591940631414},{"_id":"public/js/leancloud-count.js","hash":"3d713d7b5e9f473a8c44b2cc64f211568bac8c90","modified":1591940631415},{"_id":"public/js/search.js","hash":"1a1bfdbf2ea98d387925f63246c15ef9e9556fef","modified":1591940631415},{"_id":"public/plugin/chinese/chinese.js","hash":"986dfdf6f27852151e2225aaaa22d2302d5d24dc","modified":1591940631415},{"_id":"public/plugin/gallerypage/natural.css","hash":"8014a4791f5789e55aa8921def9eb93b3f31d48d","modified":1591940631415},{"_id":"public/plugin/imagelazyloader/yall.min.js","hash":"59e3ca7c5cc98368156826ea857fa1a8dea6aaa4","modified":1591940631415},{"_id":"public/plugin/imageloaded/imagesloaded.pkgd.min.js","hash":"6d3e11174e22668e69df236e5c4542168f7cbfec","modified":1591940631415},{"_id":"public/plugin/love/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1591940631415},{"_id":"public/plugin/resizediv/resizediv.js","hash":"1b3e3eb33aee0de1f02384dbdbd3941716e0fda5","modified":1591940631415},{"_id":"public/plugin/toc/katelog.min.js","hash":"7acaa9e4a1a3689b84382c1814b58b1168c57e2c","modified":1591940631415},{"_id":"public/css/Annie.css","hash":"64e9f855fb1cae775c953815ae654ad4cf7b65b3","modified":1591940631415},{"_id":"public/js/main.js","hash":"5c090a6312edcfee22d1a0b3a760cd467d9982bd","modified":1591940631415},{"_id":"public/plugin/clipboard/clipboard.js","hash":"43d4af727a32a793d9146eb828ed114e3ca29cec","modified":1591940631416},{"_id":"public/plugin/fancybox/jquery.fancybox.css","hash":"7a81dceacd45c9249b1da50c3a51eb6aec68424c","modified":1591940631416},{"_id":"public/plugin/gallerypage/natural-gallery.full.css","hash":"d5c5ff93bf13e2d4ece69ccaa6cd72a2486daba0","modified":1591940631416},{"_id":"public/plugin/search/ziploader.js","hash":"93c976bea5ae21811807cf27b4ca8c3c94640b04","modified":1591940631416},{"_id":"public/plugin/comment/valine.min.js","hash":"0c698e2d51cdc0d2eb303c8c3a81ddd6d6cf667f","modified":1591940631416},{"_id":"public/plugin/gallerypage/data.json","hash":"a827712b50f4805533735999a50684999788986c","modified":1591940631416},{"_id":"public/plugin/gallerypage/natural-gallery.full.js","hash":"5b3dfb0b5279055706c57484e14c8dac321be7e8","modified":1591940631416},{"_id":"public/plugin/jquery/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1591940631416},{"_id":"public/plugin/nicescroll/jquery.nicescroll.js","hash":"25b8db3ad673a4661334b1cdeaf37ed881ffd17c","modified":1591940631416},{"_id":"public/plugin/fancybox/jquery.fancybox.js","hash":"c4461bc0cacd6a1d58885ca0f466ba1b7562c85d","modified":1591940631416},{"_id":"public/plugin/leancloud/av-min.js","hash":"d16c3eb20daa240feea36cc607a2e8a22ac66f81","modified":1591940631416},{"_id":"public/plugin/motto/motto.js","hash":"282eac08d66a6e14f1b170cf1dbea67e53fba436","modified":1591940631417},{"_id":"public/image/nginx/访问上游服务器时可使用的变量.png","hash":"531a348d461c2ac627401386d6dc39109504a76f","modified":1591940631417},{"_id":"public/css/fonts/icomoon.svg","hash":"6e165b0a2f3497478b00503fe85c38e1c6e05e4d","modified":1591940631417},{"_id":"public/image/nginx/静态web服务器与反向代理.png","hash":"f5a99510edfc926051667608e8514590d9946793","modified":1591940631420},{"_id":"public/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg","hash":"502e53d791b534cc1efe03a58f33357b3770dc7c","modified":1591940631425},{"_id":"public/image/nginx/nginx http模块调用简化流程.png","hash":"d9a873b25b80c78e559c181fb64e7c9f1610e142","modified":1591940631425},{"_id":"public/img/favicon.ico","hash":"92da6723b6526aa98c23501e6086c5948a13083c","modified":1591940631425},{"_id":"public/img/cart_cover.jpg","hash":"5c9561c6cc4637a1cfc03fb0399883f052e3340b","modified":1591940631429},{"_id":"public/image/nginx/反向代理服务器转发请求流程.png","hash":"f824d328add787793b2e973cdddf13f0ebebe670","modified":1591940631430},{"_id":"public/img/header-bg.jpg","hash":"509748b7822d48d510476d6168c96cc09d6d7502","modified":1591940631431},{"_id":"source/_posts/study/20200617.md","hash":"e265972fa5854819471a9961f416777c64cfb813","modified":1592377990082},{"_id":"source/_posts/study/20200618.md","hash":"5249efe06beeb52ed6083749a5f81dc2b5822629","modified":1592377653559},{"_id":"source/_posts/study/20200619.md","hash":"5c5c1de725f6c389495f4067646fbe37d97a6c5c","modified":1592374548548},{"_id":"public/archives/page/2/index.html","hash":"0fcabcc007c4c9ac3f9a7fbc4b8b2aea4630858e","modified":1592377723900},{"_id":"public/page/2/index.html","hash":"a5078bb6f67034a900af667169d4d7641eaf4d28","modified":1592377723900},{"_id":"public/2020/06/17/study/20200617/index.html","hash":"0d1bd848f8bf7e702644bad8a8916d4f1e204a91","modified":1592377997124},{"_id":"public/2020/06/17/study/20200618/index.html","hash":"a3e3bdf0cb09714ba982ad7f3ffbc2c6346403b2","modified":1592377723900},{"_id":"public/2020/06/17/study/20200619/index.html","hash":"904655b24092f6667ee7a9bd8998b92b66696173","modified":1592377723901},{"_id":"public/2020/06/17/study/20200612/index.html","hash":"2f9e5724acc8daee979d73455cb01e94acb12fd7","modified":1592377723901}],"Category":[{"name":"lumen框架","_id":"ckbbscje20004o8exnis6vvsf"},{"name":"nginx","_id":"ckbbscje70007o8exil2ytwlb"},{"name":"技术架构","_id":"ckbbscjft000fo8ex5l15k3iu"},{"name":"区块链:定义未来金融与经济新格局","_id":"ckbbscjg1000ko8ex8yhfnraz"},{"name":"学习收录","_id":"ckbbscjg9000wo8exxdlxowbw"},{"name":"每日计划","_id":"ckbbscjgb0011o8exuj2sofqd"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404/index.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2020-06-12T00:53:51.905Z","updated":"2020-06-12T00:53:51.905Z","path":"404/index.html","title":"","comments":1,"layout":"page","_id":"ckbbscjdq0000o8ex9b0a2ns1","content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"技术栈板块","date":"2017-12-08T15:23:38.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 技术栈板块\ndate: 2017-12-08 23:23:38\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-06-12T00:53:51.905Z","path":"categories/index.html","layout":"page","_id":"ckbbscjdy0002o8exdmd79gxv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"技术栈标签关联文章","date":"2017-12-07T14:17:35.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 技术栈标签关联文章\ndate: 2017-12-07 22:17:35\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-06-12T00:53:51.913Z","path":"tags/index.html","layout":"page","_id":"ckbbscje50006o8exh59ihj5e","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"lumen建立API项目","date":"2017-07-08T08:18:00.000Z","_content":"#lumen环境搭建（5.4.X 版本）\n\n## composer及lumen安装\n环境: mac or linux\n\n- 使用如下命令进行comoser的安装:  \n1. curl -sS https://getcomposer.org/installer | php\n2. mv composer.phar /usr/local/bin/  \n3. 输入composer回车,能正常展示composer的版本及使用方法,即安装成功\n\n<!-- more -->\n\n- 使用如下命令进行lumen的项目创建及环境配置\n1. composer create-project --prefer-dist laravel/lumen 项目名称  \n   说明:  \n   1) 时间可能会有些长,请耐心等待,如果长时间依然没有创建成功。  \n   2) 请更换国内镜像或升级composer  \n   更换国内镜像: composer config -g repo.packagist composer https://packagist.phpcomposer.com）  \n   升级composer: composer selfupdate\n   \n2. 配置数据库信息:  \n   lumen的项目配置信息都保存在.env文件中,修改相应的数据库配置信息:\n   ```php\n   DB_CONNECTION=mysql\n   DB_HOST=127.0.0.1  【项目的mysql数据库服务器地址】\n   DB_PORT=3306       【mysql对应的端口号】\n   DB_DATABASE=mabei  【mysql的数据库名称】\n   DB_USERNAME=root   【mysql的用户名】\n   DB_PASSWORD=root   【mysql的密码】\n   ```","source":"_posts/lumen.md","raw":"---\ntitle: lumen建立API项目  \ndate: '2017-07-08 16:18'  \ntags: php 框架 lumen API\ncategories: lumen框架\n---\n#lumen环境搭建（5.4.X 版本）\n\n## composer及lumen安装\n环境: mac or linux\n\n- 使用如下命令进行comoser的安装:  \n1. curl -sS https://getcomposer.org/installer | php\n2. mv composer.phar /usr/local/bin/  \n3. 输入composer回车,能正常展示composer的版本及使用方法,即安装成功\n\n<!-- more -->\n\n- 使用如下命令进行lumen的项目创建及环境配置\n1. composer create-project --prefer-dist laravel/lumen 项目名称  \n   说明:  \n   1) 时间可能会有些长,请耐心等待,如果长时间依然没有创建成功。  \n   2) 请更换国内镜像或升级composer  \n   更换国内镜像: composer config -g repo.packagist composer https://packagist.phpcomposer.com）  \n   升级composer: composer selfupdate\n   \n2. 配置数据库信息:  \n   lumen的项目配置信息都保存在.env文件中,修改相应的数据库配置信息:\n   ```php\n   DB_CONNECTION=mysql\n   DB_HOST=127.0.0.1  【项目的mysql数据库服务器地址】\n   DB_PORT=3306       【mysql对应的端口号】\n   DB_DATABASE=mabei  【mysql的数据库名称】\n   DB_USERNAME=root   【mysql的用户名】\n   DB_PASSWORD=root   【mysql的密码】\n   ```","slug":"lumen","published":1,"updated":"2020-06-12T00:53:51.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjdt0001o8exfaerxmqt","content":"<p>#lumen环境搭建（5.4.X 版本）</p>\n<h2 id=\"composer及lumen安装\"><a href=\"#composer及lumen安装\" class=\"headerlink\" title=\"composer及lumen安装\"></a>composer及lumen安装</h2><p>环境: mac or linux</p>\n<ul>\n<li>使用如下命令进行comoser的安装:  </li>\n</ul>\n<ol>\n<li>curl -sS <a href=\"https://getcomposer.org/installer\" target=\"_blank\" rel=\"noopener\">https://getcomposer.org/installer</a> | php</li>\n<li>mv composer.phar /usr/local/bin/  </li>\n<li>输入composer回车,能正常展示composer的版本及使用方法,即安装成功</li>\n</ol>\n<a id=\"more\"></a>\n<ul>\n<li>使用如下命令进行lumen的项目创建及环境配置</li>\n</ul>\n<ol>\n<li><p>composer create-project –prefer-dist laravel/lumen 项目名称<br>说明:<br>1) 时间可能会有些长,请耐心等待,如果长时间依然没有创建成功。<br>2) 请更换国内镜像或升级composer<br>更换国内镜像: composer config -g repo.packagist composer <a href=\"https://packagist.phpcomposer.com）\" target=\"_blank\" rel=\"noopener\">https://packagist.phpcomposer.com）</a><br>升级composer: composer selfupdate</p>\n</li>\n<li><p>配置数据库信息:<br>lumen的项目配置信息都保存在.env文件中,修改相应的数据库配置信息:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DB_CONNECTION=mysql</span><br><span class=\"line\">DB_HOST=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>  【项目的mysql数据库服务器地址】</span><br><span class=\"line\">DB_PORT=<span class=\"number\">3306</span>       【mysql对应的端口号】</span><br><span class=\"line\">DB_DATABASE=mabei  【mysql的数据库名称】</span><br><span class=\"line\">DB_USERNAME=root   【mysql的用户名】</span><br><span class=\"line\">DB_PASSWORD=root   【mysql的密码】</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>#lumen环境搭建（5.4.X 版本）</p>\n<h2 id=\"composer及lumen安装\"><a href=\"#composer及lumen安装\" class=\"headerlink\" title=\"composer及lumen安装\"></a>composer及lumen安装</h2><p>环境: mac or linux</p>\n<ul>\n<li>使用如下命令进行comoser的安装:  </li>\n</ul>\n<ol>\n<li>curl -sS <a href=\"https://getcomposer.org/installer\" target=\"_blank\" rel=\"noopener\">https://getcomposer.org/installer</a> | php</li>\n<li>mv composer.phar /usr/local/bin/  </li>\n<li>输入composer回车,能正常展示composer的版本及使用方法,即安装成功</li>\n</ol>","more":"<ul>\n<li>使用如下命令进行lumen的项目创建及环境配置</li>\n</ul>\n<ol>\n<li><p>composer create-project –prefer-dist laravel/lumen 项目名称<br>说明:<br>1) 时间可能会有些长,请耐心等待,如果长时间依然没有创建成功。<br>2) 请更换国内镜像或升级composer<br>更换国内镜像: composer config -g repo.packagist composer <a href=\"https://packagist.phpcomposer.com）\" target=\"_blank\" rel=\"noopener\">https://packagist.phpcomposer.com）</a><br>升级composer: composer selfupdate</p>\n</li>\n<li><p>配置数据库信息:<br>lumen的项目配置信息都保存在.env文件中,修改相应的数据库配置信息:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DB_CONNECTION=mysql</span><br><span class=\"line\">DB_HOST=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>  【项目的mysql数据库服务器地址】</span><br><span class=\"line\">DB_PORT=<span class=\"number\">3306</span>       【mysql对应的端口号】</span><br><span class=\"line\">DB_DATABASE=mabei  【mysql的数据库名称】</span><br><span class=\"line\">DB_USERNAME=root   【mysql的用户名】</span><br><span class=\"line\">DB_PASSWORD=root   【mysql的密码】</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"nginx配置","date":"2017-07-13T13:17:00.000Z","_content":"\n# nginx配置\n\n## 文件路径配置\n\n- 访问首页\n\n  > 语法： index file1 file2 file3 ... ;<br>\n  > 配置块： http, server, location\n\n<!-- more -->\n\n- HTTP错误码重定向页面\n\n  > 语法： error_page code[code1 code2 ...][=|answer_code=]uri|@named_location;<br>\n  > 配置块： http, server, location, if\n\n- 是否允许递归使用error_page\n\n  > 语法： recursive_error_page [on|off];<br>\n  > 配置块： http，server，location\n\n- try_files\n\n## 内存及磁盘资源分配\n\n- HTTP包体只存储到磁盘文件中\n\n  > 语法： client_body_only_in_file on|off|clean;<br>\n  > 配置块： http，server，location\n\n- HTTP包体尽量写到一个内存buffer中\n\n  > 语法： client_body_in_single_buffer size;<br>\n  > 配置块： http，server\n\n- 存储超大HTTP头部的内存buffer的大小\n\n  > 语法： large_client_header_buffers number size;<br>\n  > 配置块： http，server\n\n- 存储HTTP包体的内存buffer的大小\n\n  > 语法： large_client_body_buffer_size size;<br>\n  > 配置块： http，server，location\n\n- HTTP的临时存放目录\n\n  > 语法： client_body_temp_path dirpath[level1[level2[level2]]];<br>\n  > 配置块： http，server，location\n\n- 建立TCP链接预配内存池初始化大小\n\n  > 语法： connect_pool_size size;<br>\n  > 配置块： http，server\n\n- 请求预配内存池大小\n\n  > 语法: request_pool_size size;<br>\n  > 配置块: http, server\n\n## 网络连接的设置\n\n- 读取HTTP头部的超时时间\n\n  > 语法: client_header_timeout time;（默认单位:秒）<br>\n  > 配置块: http, server, location\n\n- 读取HTTP包体的超时时间\n\n  > 语法: client_body_timeout time;（默认单位:秒）<br>\n  > 配置块: http, server, location\n\n- 发送响应的超时时间\n\n  > 语法: send_timeout time;<br>\n  > 配置块: http, server, location\n\n- 发送RST包来重置连接\n\n  > 语法: reset_timeout_connection on|off;<br>\n  > 配置块: http, server, location\n\n- 关闭用户的连接方式\n\n  > 语法： lingering_close on|off|always<br>\n  > 配置块： http, server, location\n\n- 关闭用户的链接方式的延迟时间\n\n  > 语法： lingering_time time;<br>\n  > 配置块： http, server, location\n\n- 无数据情况下关闭用户链接的超时时间\n\n  > 语法： lingering_timeout time;<br>\n  > 配置块： http, server, location\n\n- 禁用多个http请求复用同一个http长链接（禁用keepalive功能）\n\n  > 语法： keepalive_disable [msie6|safria|none]...;<br>\n  > 配饰块： http, server, location\n\n- keepalive超时时间\n\n  > 语法： keepalive_timeout time;<br>\n  > 配置块： http, server, location\n\n- 一个keepalive长连接上允许承载的最大请求数\n\n  > 语法： keepalive_requests n;<br>\n  > 配置块： http, server, location\n\n- 对keepalive是否启用TCP_NODELAY选项\n\n  > 语法： tcp_nodelay on|off;<br>\n  > 配置块： http, server, location\n\n- 是否开启FreeBSD系统上的TCP_NOPUSH或linux系统上的TCP_CORK功能\n\n  > 语法： tcp_nopush on|off;<br>\n  > 配置块： http, server, location\n\n## MIME类型的设置\n\n- MIME type与文件扩展映射\n> 语法： type {...};<br>\n> 配置块： http, server, location\n\n- 默认MIME type\n > 语法: default_type MIME-type;  \n > 配置块: http, server, location\n\n- MIME type散列桶占用内存的大小\n > 语法: types_hash_bucket_size size;  \n > 配置块: http, server, location\n\n- MIME type散列桶占用最大内存的大小\n > 语法: type_hash_max_size size;  \n > 配置块: http, server, location\n\n## 对客户端请求的限制\n- 按HTTP方法名限制用户请求\n > 语法: limit_except method ... {...};  \n > 配置块: location\n\n- HTTP请求包体的最大值\n > 语法: clinet_max_body_size size;\n > 配置块: http、server、location\n\n- 对请求的速度\n > 语法: limit_rate speed;\n > 配置块: http、server、location、if\n\n- 对请求限速的延迟市场\n> 语法: limit_rate_after time;  \n> 配置块: http、server、location、if\n\n\n## 文件操作的优化\n- sendfile系统调用\n> 语法: sendfile on|off;  \n> 配置块: http、server、location\n\n- AIO系统调用\n> 语法: aio on|off;  \n> 配置块: http, server, location\n\n- directio(linux系统以O_DIRECT方式只读文件,缓冲区大小)\n> 语法: directio size|off;  \n> 配置块: http, server, location\n\n- directio方式读取文件时的对齐方式\n> 语法: directio_alignment size;  \n> 配置块: http, server, location\n\n- 打开缓存功能\n> 语法: open_file_cache max=N[inactive=time]|off;  \n> 配置块: http, server, location\n\n- 是否缓存打开文件错误信息\n> 语法: open_file_cache_errors on|off;  \n> 配置块: http, server, location\n\n- 不被淘汰的最小次数\n> 语法: open_file_cache_min_users number;  \n> 配置块: http, server, location\n\n- 检验缓存中元素有效性的频率\n> 语法: open_file_cache_valid time;  \n> 配置块: http, server, location\n\n\n## 对客户端请求的特殊处理\n- 忽略不合法的HTTP头部\n> 语法: ignore_invalid_headers on|off;  \n> 配置块: http, server\n\n- HTTP头部是否允许下划线\n> 语法: underscores_in_headers on|off;  \n> 配置块: http, server, location\n\n- 对If-Modified-Since头部的策略处理\n> 语法: if_modified_since [off|exact|before];  \n> 配置块: http, server, location\n\n- 文件未找到时是否记录到error日志\n> 语法: log_not_fount off|on;  \n> 配置块: http, server, location\n\n- 是否匹配相邻的'/'\n> 语法: merge_slashes on|off;  \n> 配置块: http, server, location\n\n- DNS解析地址\n> 语法: resolver address ...;  \n> 配置块: http, server, location\n\n- DNS解析地址超时时间\n> 语法: resolver_timeout time;  \n> 配置块: http, server, location\n\n- 返回错误页面时,是否在Server中注明nginx版本\n> 语法: server_tokens on|off;  \n> 配置块: http, server, location\n\n## ngx_http_core_module模块提供的变量\n![访问上游服务器时可使用的变量](/image/nginx/访问上游服务器时可使用的变量.png)\n\n## 反向代理服务器的基本原理\n基本原来的流程图如下：\n\n![反向代理服务器转发请求流程](/image/nginx/反向代理服务器转发请求流程.png)\n\n## 负载均衡的基本配置\n- upstream块\n> 语法: upstream name {...};  \n> 配置块: http  \n\n- server  \n> 语法: server name [parameters];  \n> 配置块: upstream\n\n- ip_hash\n> 语法: ip_hash;  \n> 配置块: upstream\n\n- 样例:\n```nginx\nupstream tianshenjr {  \n\n    #ip_hash; 说明:与weight不可共存;\n\n    server dev.tianshenjr.com weight=4;  \n    server 127.0.0.1:8080 max_fails=3 fail_timeout=30s;  \n    server unix:/tmp/api.tianshenjr.com;  \n}  \nserver {  \n    location / {  \n        proxy_pass http://www.tianshenjr.com  \n    }  \n}\n```\n\n- 记录日志时支持的变量\n\n\n## 反向代理的基本配置\n\n- proxy_pass\n> 语法: proxy_pass URL;  \n> 配置块: location, if\n\n- proxy_method\n> 语法: proxy_method method;  \n> 配置块: http, server, location\n\n- proxy_hide_header\n> 语法: proxy_hide_header the_header;  \n> 配置块: http, server, location\n\n- proxy_pass_header\n> 语法: proxy_pass_header the_header;  \n> 配置块: http, server, location\n\n- proxy_pass_request_body\n> 语法: proxy_pass_request_body on|off;  \n> 配置块: http, server, location\n\n- proxy_pass_request_headers\n> 语法: proxy_pass_request_headers on|off;  \n> 配置块: http, server, location\n\n- proxy_redirect\n> 语法: proxy_redirect [default|off|redirect replacement];  \n> 配置块: http, server, location\n\n- proxy_next_upstream\n> 语法: proxy_next_upstream [error|timeout|invalid_header|http_500|http_502|http_503|http_504|http_404|off];\n> 配置块: http, server, location\n\n扩展阅读\n   http://wiki.nginx.org/Modules\n\n\n# 开发HTTP模块\n## 如何调用HTTP模块\n![http模块调用简化流程](/image/nginx/nginx http模块调用简化流程.png)\n\n## 类型封装\n- 整型\n```C\ntypedef intptr_t ngx_int_t;\ntypedef uintptr_t ngx_uint_t;\n```\n\n- ngx_str_t 数据结构\n```C\ntypedef struct{\n    size_t      len;\n    u_char      *data;\n} ngx_str_t;\n```\n\n- ngx_list_t 数据结构\n```C\ntypedef struct ngx_list_part_s ngx_list_part_t;\n\nstruct ngx_list _part_s{\n    void                *elts;\n    ngx_uint_t          nelts;\n    ngx_list_part_t     *next;\n};\n\ntypedef struct{\n    ngx_list_part_t     *last;\n    ngx_list_part_t     part;\n    size_t              size;\n    ngx_unit_t          nalloc;\n    ngx_pool_t          *pool;\n} ngx_list_t;\n```\n- ngx_table_elt_t 数据结构\n- ngx_buf_t 数据结构\n- ngx_chain_t 数据结构\n","source":"_posts/ngnix.md","raw":"---\ntitle: nginx配置\ndate: '2017-07-13 21:17'\ntags: nginx 负载均衡 配置\ncategories: nginx\n---\n\n# nginx配置\n\n## 文件路径配置\n\n- 访问首页\n\n  > 语法： index file1 file2 file3 ... ;<br>\n  > 配置块： http, server, location\n\n<!-- more -->\n\n- HTTP错误码重定向页面\n\n  > 语法： error_page code[code1 code2 ...][=|answer_code=]uri|@named_location;<br>\n  > 配置块： http, server, location, if\n\n- 是否允许递归使用error_page\n\n  > 语法： recursive_error_page [on|off];<br>\n  > 配置块： http，server，location\n\n- try_files\n\n## 内存及磁盘资源分配\n\n- HTTP包体只存储到磁盘文件中\n\n  > 语法： client_body_only_in_file on|off|clean;<br>\n  > 配置块： http，server，location\n\n- HTTP包体尽量写到一个内存buffer中\n\n  > 语法： client_body_in_single_buffer size;<br>\n  > 配置块： http，server\n\n- 存储超大HTTP头部的内存buffer的大小\n\n  > 语法： large_client_header_buffers number size;<br>\n  > 配置块： http，server\n\n- 存储HTTP包体的内存buffer的大小\n\n  > 语法： large_client_body_buffer_size size;<br>\n  > 配置块： http，server，location\n\n- HTTP的临时存放目录\n\n  > 语法： client_body_temp_path dirpath[level1[level2[level2]]];<br>\n  > 配置块： http，server，location\n\n- 建立TCP链接预配内存池初始化大小\n\n  > 语法： connect_pool_size size;<br>\n  > 配置块： http，server\n\n- 请求预配内存池大小\n\n  > 语法: request_pool_size size;<br>\n  > 配置块: http, server\n\n## 网络连接的设置\n\n- 读取HTTP头部的超时时间\n\n  > 语法: client_header_timeout time;（默认单位:秒）<br>\n  > 配置块: http, server, location\n\n- 读取HTTP包体的超时时间\n\n  > 语法: client_body_timeout time;（默认单位:秒）<br>\n  > 配置块: http, server, location\n\n- 发送响应的超时时间\n\n  > 语法: send_timeout time;<br>\n  > 配置块: http, server, location\n\n- 发送RST包来重置连接\n\n  > 语法: reset_timeout_connection on|off;<br>\n  > 配置块: http, server, location\n\n- 关闭用户的连接方式\n\n  > 语法： lingering_close on|off|always<br>\n  > 配置块： http, server, location\n\n- 关闭用户的链接方式的延迟时间\n\n  > 语法： lingering_time time;<br>\n  > 配置块： http, server, location\n\n- 无数据情况下关闭用户链接的超时时间\n\n  > 语法： lingering_timeout time;<br>\n  > 配置块： http, server, location\n\n- 禁用多个http请求复用同一个http长链接（禁用keepalive功能）\n\n  > 语法： keepalive_disable [msie6|safria|none]...;<br>\n  > 配饰块： http, server, location\n\n- keepalive超时时间\n\n  > 语法： keepalive_timeout time;<br>\n  > 配置块： http, server, location\n\n- 一个keepalive长连接上允许承载的最大请求数\n\n  > 语法： keepalive_requests n;<br>\n  > 配置块： http, server, location\n\n- 对keepalive是否启用TCP_NODELAY选项\n\n  > 语法： tcp_nodelay on|off;<br>\n  > 配置块： http, server, location\n\n- 是否开启FreeBSD系统上的TCP_NOPUSH或linux系统上的TCP_CORK功能\n\n  > 语法： tcp_nopush on|off;<br>\n  > 配置块： http, server, location\n\n## MIME类型的设置\n\n- MIME type与文件扩展映射\n> 语法： type {...};<br>\n> 配置块： http, server, location\n\n- 默认MIME type\n > 语法: default_type MIME-type;  \n > 配置块: http, server, location\n\n- MIME type散列桶占用内存的大小\n > 语法: types_hash_bucket_size size;  \n > 配置块: http, server, location\n\n- MIME type散列桶占用最大内存的大小\n > 语法: type_hash_max_size size;  \n > 配置块: http, server, location\n\n## 对客户端请求的限制\n- 按HTTP方法名限制用户请求\n > 语法: limit_except method ... {...};  \n > 配置块: location\n\n- HTTP请求包体的最大值\n > 语法: clinet_max_body_size size;\n > 配置块: http、server、location\n\n- 对请求的速度\n > 语法: limit_rate speed;\n > 配置块: http、server、location、if\n\n- 对请求限速的延迟市场\n> 语法: limit_rate_after time;  \n> 配置块: http、server、location、if\n\n\n## 文件操作的优化\n- sendfile系统调用\n> 语法: sendfile on|off;  \n> 配置块: http、server、location\n\n- AIO系统调用\n> 语法: aio on|off;  \n> 配置块: http, server, location\n\n- directio(linux系统以O_DIRECT方式只读文件,缓冲区大小)\n> 语法: directio size|off;  \n> 配置块: http, server, location\n\n- directio方式读取文件时的对齐方式\n> 语法: directio_alignment size;  \n> 配置块: http, server, location\n\n- 打开缓存功能\n> 语法: open_file_cache max=N[inactive=time]|off;  \n> 配置块: http, server, location\n\n- 是否缓存打开文件错误信息\n> 语法: open_file_cache_errors on|off;  \n> 配置块: http, server, location\n\n- 不被淘汰的最小次数\n> 语法: open_file_cache_min_users number;  \n> 配置块: http, server, location\n\n- 检验缓存中元素有效性的频率\n> 语法: open_file_cache_valid time;  \n> 配置块: http, server, location\n\n\n## 对客户端请求的特殊处理\n- 忽略不合法的HTTP头部\n> 语法: ignore_invalid_headers on|off;  \n> 配置块: http, server\n\n- HTTP头部是否允许下划线\n> 语法: underscores_in_headers on|off;  \n> 配置块: http, server, location\n\n- 对If-Modified-Since头部的策略处理\n> 语法: if_modified_since [off|exact|before];  \n> 配置块: http, server, location\n\n- 文件未找到时是否记录到error日志\n> 语法: log_not_fount off|on;  \n> 配置块: http, server, location\n\n- 是否匹配相邻的'/'\n> 语法: merge_slashes on|off;  \n> 配置块: http, server, location\n\n- DNS解析地址\n> 语法: resolver address ...;  \n> 配置块: http, server, location\n\n- DNS解析地址超时时间\n> 语法: resolver_timeout time;  \n> 配置块: http, server, location\n\n- 返回错误页面时,是否在Server中注明nginx版本\n> 语法: server_tokens on|off;  \n> 配置块: http, server, location\n\n## ngx_http_core_module模块提供的变量\n![访问上游服务器时可使用的变量](/image/nginx/访问上游服务器时可使用的变量.png)\n\n## 反向代理服务器的基本原理\n基本原来的流程图如下：\n\n![反向代理服务器转发请求流程](/image/nginx/反向代理服务器转发请求流程.png)\n\n## 负载均衡的基本配置\n- upstream块\n> 语法: upstream name {...};  \n> 配置块: http  \n\n- server  \n> 语法: server name [parameters];  \n> 配置块: upstream\n\n- ip_hash\n> 语法: ip_hash;  \n> 配置块: upstream\n\n- 样例:\n```nginx\nupstream tianshenjr {  \n\n    #ip_hash; 说明:与weight不可共存;\n\n    server dev.tianshenjr.com weight=4;  \n    server 127.0.0.1:8080 max_fails=3 fail_timeout=30s;  \n    server unix:/tmp/api.tianshenjr.com;  \n}  \nserver {  \n    location / {  \n        proxy_pass http://www.tianshenjr.com  \n    }  \n}\n```\n\n- 记录日志时支持的变量\n\n\n## 反向代理的基本配置\n\n- proxy_pass\n> 语法: proxy_pass URL;  \n> 配置块: location, if\n\n- proxy_method\n> 语法: proxy_method method;  \n> 配置块: http, server, location\n\n- proxy_hide_header\n> 语法: proxy_hide_header the_header;  \n> 配置块: http, server, location\n\n- proxy_pass_header\n> 语法: proxy_pass_header the_header;  \n> 配置块: http, server, location\n\n- proxy_pass_request_body\n> 语法: proxy_pass_request_body on|off;  \n> 配置块: http, server, location\n\n- proxy_pass_request_headers\n> 语法: proxy_pass_request_headers on|off;  \n> 配置块: http, server, location\n\n- proxy_redirect\n> 语法: proxy_redirect [default|off|redirect replacement];  \n> 配置块: http, server, location\n\n- proxy_next_upstream\n> 语法: proxy_next_upstream [error|timeout|invalid_header|http_500|http_502|http_503|http_504|http_404|off];\n> 配置块: http, server, location\n\n扩展阅读\n   http://wiki.nginx.org/Modules\n\n\n# 开发HTTP模块\n## 如何调用HTTP模块\n![http模块调用简化流程](/image/nginx/nginx http模块调用简化流程.png)\n\n## 类型封装\n- 整型\n```C\ntypedef intptr_t ngx_int_t;\ntypedef uintptr_t ngx_uint_t;\n```\n\n- ngx_str_t 数据结构\n```C\ntypedef struct{\n    size_t      len;\n    u_char      *data;\n} ngx_str_t;\n```\n\n- ngx_list_t 数据结构\n```C\ntypedef struct ngx_list_part_s ngx_list_part_t;\n\nstruct ngx_list _part_s{\n    void                *elts;\n    ngx_uint_t          nelts;\n    ngx_list_part_t     *next;\n};\n\ntypedef struct{\n    ngx_list_part_t     *last;\n    ngx_list_part_t     part;\n    size_t              size;\n    ngx_unit_t          nalloc;\n    ngx_pool_t          *pool;\n} ngx_list_t;\n```\n- ngx_table_elt_t 数据结构\n- ngx_buf_t 数据结构\n- ngx_chain_t 数据结构\n","slug":"ngnix","published":1,"updated":"2020-06-12T00:53:51.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjdz0003o8ex4lg0os60","content":"<h1 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h1><h2 id=\"文件路径配置\"><a href=\"#文件路径配置\" class=\"headerlink\" title=\"文件路径配置\"></a>文件路径配置</h2><ul>\n<li><p>访问首页</p>\n<blockquote>\n<p>语法： index file1 file2 file3 … ;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li><p>HTTP错误码重定向页面</p>\n<blockquote>\n<p>语法： error_page code[code1 code2 …][=|answer_code=]uri|@named_location;<br><br>配置块： http, server, location, if</p>\n</blockquote>\n</li>\n<li><p>是否允许递归使用error_page</p>\n<blockquote>\n<p>语法： recursive_error_page [on|off];<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>try_files</p>\n</li>\n</ul>\n<h2 id=\"内存及磁盘资源分配\"><a href=\"#内存及磁盘资源分配\" class=\"headerlink\" title=\"内存及磁盘资源分配\"></a>内存及磁盘资源分配</h2><ul>\n<li><p>HTTP包体只存储到磁盘文件中</p>\n<blockquote>\n<p>语法： client_body_only_in_file on|off|clean;<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>HTTP包体尽量写到一个内存buffer中</p>\n<blockquote>\n<p>语法： client_body_in_single_buffer size;<br><br>配置块： http，server</p>\n</blockquote>\n</li>\n<li><p>存储超大HTTP头部的内存buffer的大小</p>\n<blockquote>\n<p>语法： large_client_header_buffers number size;<br><br>配置块： http，server</p>\n</blockquote>\n</li>\n<li><p>存储HTTP包体的内存buffer的大小</p>\n<blockquote>\n<p>语法： large_client_body_buffer_size size;<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>HTTP的临时存放目录</p>\n<blockquote>\n<p>语法： client_body_temp_path dirpath[level1[level2[level2]]];<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>建立TCP链接预配内存池初始化大小</p>\n<blockquote>\n<p>语法： connect_pool_size size;<br><br>配置块： http，server</p>\n</blockquote>\n</li>\n<li><p>请求预配内存池大小</p>\n<blockquote>\n<p>语法: request_pool_size size;<br><br>配置块: http, server</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"网络连接的设置\"><a href=\"#网络连接的设置\" class=\"headerlink\" title=\"网络连接的设置\"></a>网络连接的设置</h2><ul>\n<li><p>读取HTTP头部的超时时间</p>\n<blockquote>\n<p>语法: client_header_timeout time;（默认单位:秒）<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>读取HTTP包体的超时时间</p>\n<blockquote>\n<p>语法: client_body_timeout time;（默认单位:秒）<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>发送响应的超时时间</p>\n<blockquote>\n<p>语法: send_timeout time;<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>发送RST包来重置连接</p>\n<blockquote>\n<p>语法: reset_timeout_connection on|off;<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>关闭用户的连接方式</p>\n<blockquote>\n<p>语法： lingering_close on|off|always<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>关闭用户的链接方式的延迟时间</p>\n<blockquote>\n<p>语法： lingering_time time;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>无数据情况下关闭用户链接的超时时间</p>\n<blockquote>\n<p>语法： lingering_timeout time;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>禁用多个http请求复用同一个http长链接（禁用keepalive功能）</p>\n<blockquote>\n<p>语法： keepalive_disable [msie6|safria|none]…;<br><br>配饰块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>keepalive超时时间</p>\n<blockquote>\n<p>语法： keepalive_timeout time;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>一个keepalive长连接上允许承载的最大请求数</p>\n<blockquote>\n<p>语法： keepalive_requests n;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>对keepalive是否启用TCP_NODELAY选项</p>\n<blockquote>\n<p>语法： tcp_nodelay on|off;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>是否开启FreeBSD系统上的TCP_NOPUSH或linux系统上的TCP_CORK功能</p>\n<blockquote>\n<p>语法： tcp_nopush on|off;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"MIME类型的设置\"><a href=\"#MIME类型的设置\" class=\"headerlink\" title=\"MIME类型的设置\"></a>MIME类型的设置</h2><ul>\n<li><p>MIME type与文件扩展映射</p>\n<blockquote>\n<p>语法： type {…};<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>默认MIME type</p>\n<blockquote>\n<p>语法: default_type MIME-type;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>MIME type散列桶占用内存的大小</p>\n<blockquote>\n<p>语法: types_hash_bucket_size size;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>MIME type散列桶占用最大内存的大小</p>\n<blockquote>\n<p>语法: type_hash_max_size size;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"对客户端请求的限制\"><a href=\"#对客户端请求的限制\" class=\"headerlink\" title=\"对客户端请求的限制\"></a>对客户端请求的限制</h2><ul>\n<li><p>按HTTP方法名限制用户请求</p>\n<blockquote>\n<p>语法: limit_except method … {…};<br>配置块: location</p>\n</blockquote>\n</li>\n<li><p>HTTP请求包体的最大值</p>\n<blockquote>\n<p>语法: clinet_max_body_size size;<br>配置块: http、server、location</p>\n</blockquote>\n</li>\n<li><p>对请求的速度</p>\n<blockquote>\n<p>语法: limit_rate speed;<br>配置块: http、server、location、if</p>\n</blockquote>\n</li>\n<li><p>对请求限速的延迟市场</p>\n<blockquote>\n<p>语法: limit_rate_after time;<br>配置块: http、server、location、if</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"文件操作的优化\"><a href=\"#文件操作的优化\" class=\"headerlink\" title=\"文件操作的优化\"></a>文件操作的优化</h2><ul>\n<li><p>sendfile系统调用</p>\n<blockquote>\n<p>语法: sendfile on|off;<br>配置块: http、server、location</p>\n</blockquote>\n</li>\n<li><p>AIO系统调用</p>\n<blockquote>\n<p>语法: aio on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>directio(linux系统以O_DIRECT方式只读文件,缓冲区大小)</p>\n<blockquote>\n<p>语法: directio size|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>directio方式读取文件时的对齐方式</p>\n<blockquote>\n<p>语法: directio_alignment size;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>打开缓存功能</p>\n<blockquote>\n<p>语法: open_file_cache max=N[inactive=time]|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>是否缓存打开文件错误信息</p>\n<blockquote>\n<p>语法: open_file_cache_errors on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>不被淘汰的最小次数</p>\n<blockquote>\n<p>语法: open_file_cache_min_users number;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>检验缓存中元素有效性的频率</p>\n<blockquote>\n<p>语法: open_file_cache_valid time;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"对客户端请求的特殊处理\"><a href=\"#对客户端请求的特殊处理\" class=\"headerlink\" title=\"对客户端请求的特殊处理\"></a>对客户端请求的特殊处理</h2><ul>\n<li><p>忽略不合法的HTTP头部</p>\n<blockquote>\n<p>语法: ignore_invalid_headers on|off;<br>配置块: http, server</p>\n</blockquote>\n</li>\n<li><p>HTTP头部是否允许下划线</p>\n<blockquote>\n<p>语法: underscores_in_headers on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>对If-Modified-Since头部的策略处理</p>\n<blockquote>\n<p>语法: if_modified_since [off|exact|before];<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>文件未找到时是否记录到error日志</p>\n<blockquote>\n<p>语法: log_not_fount off|on;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>是否匹配相邻的’/‘</p>\n<blockquote>\n<p>语法: merge_slashes on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>DNS解析地址</p>\n<blockquote>\n<p>语法: resolver address …;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>DNS解析地址超时时间</p>\n<blockquote>\n<p>语法: resolver_timeout time;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>返回错误页面时,是否在Server中注明nginx版本</p>\n<blockquote>\n<p>语法: server_tokens on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"ngx-http-core-module模块提供的变量\"><a href=\"#ngx-http-core-module模块提供的变量\" class=\"headerlink\" title=\"ngx_http_core_module模块提供的变量\"></a>ngx_http_core_module模块提供的变量</h2><p><img src=\"/image/nginx/访问上游服务器时可使用的变量.png\" alt=\"访问上游服务器时可使用的变量\"></p>\n<h2 id=\"反向代理服务器的基本原理\"><a href=\"#反向代理服务器的基本原理\" class=\"headerlink\" title=\"反向代理服务器的基本原理\"></a>反向代理服务器的基本原理</h2><p>基本原来的流程图如下：</p>\n<p><img src=\"/image/nginx/反向代理服务器转发请求流程.png\" alt=\"反向代理服务器转发请求流程\"></p>\n<h2 id=\"负载均衡的基本配置\"><a href=\"#负载均衡的基本配置\" class=\"headerlink\" title=\"负载均衡的基本配置\"></a>负载均衡的基本配置</h2><ul>\n<li><p>upstream块</p>\n<blockquote>\n<p>语法: upstream name {…};<br>配置块: http  </p>\n</blockquote>\n</li>\n<li><p>server  </p>\n<blockquote>\n<p>语法: server name [parameters];<br>配置块: upstream</p>\n</blockquote>\n</li>\n<li><p>ip_hash</p>\n<blockquote>\n<p>语法: ip_hash;<br>配置块: upstream</p>\n</blockquote>\n</li>\n<li><p>样例:</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">upstream</span> tianshenjr &#123;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#ip_hash; 说明:与weight不可共存;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">server</span> dev.tianshenjr.com weight=<span class=\"number\">4</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8080</span> max_fails=<span class=\"number\">3</span> fail_timeout=<span class=\"number\">30s</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">server</span> unix:/tmp/api.tianshenjr.com;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"section\">server</span> &#123;  </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;  </span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://www.tianshenjr.com  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>记录日志时支持的变量</p>\n</li>\n</ul>\n<h2 id=\"反向代理的基本配置\"><a href=\"#反向代理的基本配置\" class=\"headerlink\" title=\"反向代理的基本配置\"></a>反向代理的基本配置</h2><ul>\n<li><p>proxy_pass</p>\n<blockquote>\n<p>语法: proxy_pass URL;<br>配置块: location, if</p>\n</blockquote>\n</li>\n<li><p>proxy_method</p>\n<blockquote>\n<p>语法: proxy_method method;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_hide_header</p>\n<blockquote>\n<p>语法: proxy_hide_header the_header;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_pass_header</p>\n<blockquote>\n<p>语法: proxy_pass_header the_header;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_pass_request_body</p>\n<blockquote>\n<p>语法: proxy_pass_request_body on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_pass_request_headers</p>\n<blockquote>\n<p>语法: proxy_pass_request_headers on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_redirect</p>\n<blockquote>\n<p>语法: proxy_redirect [default|off|redirect replacement];<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_next_upstream</p>\n<blockquote>\n<p>语法: proxy_next_upstream [error|timeout|invalid_header|http_500|http_502|http_503|http_504|http_404|off];<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<p>扩展阅读<br>   <a href=\"http://wiki.nginx.org/Modules\" target=\"_blank\" rel=\"noopener\">http://wiki.nginx.org/Modules</a></p>\n<h1 id=\"开发HTTP模块\"><a href=\"#开发HTTP模块\" class=\"headerlink\" title=\"开发HTTP模块\"></a>开发HTTP模块</h1><h2 id=\"如何调用HTTP模块\"><a href=\"#如何调用HTTP模块\" class=\"headerlink\" title=\"如何调用HTTP模块\"></a>如何调用HTTP模块</h2><p><img src=\"/image/nginx/nginx http模块调用简化流程.png\" alt=\"http模块调用简化流程\"></p>\n<h2 id=\"类型封装\"><a href=\"#类型封装\" class=\"headerlink\" title=\"类型封装\"></a>类型封装</h2><ul>\n<li><p>整型</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">intptr_t</span> <span class=\"keyword\">ngx_int_t</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">uintptr_t</span> <span class=\"keyword\">ngx_uint_t</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ngx_str_t 数据结构</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">size_t</span>      len;</span><br><span class=\"line\">    u_char      *data;</span><br><span class=\"line\">&#125; <span class=\"keyword\">ngx_str_t</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ngx_list_t 数据结构</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ngx_list_part_s</span> <span class=\"title\">ngx_list_part_t</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ngx_list</span> _<span class=\"title\">part_s</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span>                *elts;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_uint_t</span>          nelts;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_list_part_t</span>     *next;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">ngx_list_part_t</span>     *last;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_list_part_t</span>     part;</span><br><span class=\"line\">    <span class=\"keyword\">size_t</span>              size;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_unit_t</span>          nalloc;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_pool_t</span>          *pool;</span><br><span class=\"line\">&#125; <span class=\"keyword\">ngx_list_t</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ngx_table_elt_t 数据结构</p>\n</li>\n<li>ngx_buf_t 数据结构</li>\n<li>ngx_chain_t 数据结构</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h1><h2 id=\"文件路径配置\"><a href=\"#文件路径配置\" class=\"headerlink\" title=\"文件路径配置\"></a>文件路径配置</h2><ul>\n<li><p>访问首页</p>\n<blockquote>\n<p>语法： index file1 file2 file3 … ;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n</ul>","more":"<ul>\n<li><p>HTTP错误码重定向页面</p>\n<blockquote>\n<p>语法： error_page code[code1 code2 …][=|answer_code=]uri|@named_location;<br><br>配置块： http, server, location, if</p>\n</blockquote>\n</li>\n<li><p>是否允许递归使用error_page</p>\n<blockquote>\n<p>语法： recursive_error_page [on|off];<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>try_files</p>\n</li>\n</ul>\n<h2 id=\"内存及磁盘资源分配\"><a href=\"#内存及磁盘资源分配\" class=\"headerlink\" title=\"内存及磁盘资源分配\"></a>内存及磁盘资源分配</h2><ul>\n<li><p>HTTP包体只存储到磁盘文件中</p>\n<blockquote>\n<p>语法： client_body_only_in_file on|off|clean;<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>HTTP包体尽量写到一个内存buffer中</p>\n<blockquote>\n<p>语法： client_body_in_single_buffer size;<br><br>配置块： http，server</p>\n</blockquote>\n</li>\n<li><p>存储超大HTTP头部的内存buffer的大小</p>\n<blockquote>\n<p>语法： large_client_header_buffers number size;<br><br>配置块： http，server</p>\n</blockquote>\n</li>\n<li><p>存储HTTP包体的内存buffer的大小</p>\n<blockquote>\n<p>语法： large_client_body_buffer_size size;<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>HTTP的临时存放目录</p>\n<blockquote>\n<p>语法： client_body_temp_path dirpath[level1[level2[level2]]];<br><br>配置块： http，server，location</p>\n</blockquote>\n</li>\n<li><p>建立TCP链接预配内存池初始化大小</p>\n<blockquote>\n<p>语法： connect_pool_size size;<br><br>配置块： http，server</p>\n</blockquote>\n</li>\n<li><p>请求预配内存池大小</p>\n<blockquote>\n<p>语法: request_pool_size size;<br><br>配置块: http, server</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"网络连接的设置\"><a href=\"#网络连接的设置\" class=\"headerlink\" title=\"网络连接的设置\"></a>网络连接的设置</h2><ul>\n<li><p>读取HTTP头部的超时时间</p>\n<blockquote>\n<p>语法: client_header_timeout time;（默认单位:秒）<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>读取HTTP包体的超时时间</p>\n<blockquote>\n<p>语法: client_body_timeout time;（默认单位:秒）<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>发送响应的超时时间</p>\n<blockquote>\n<p>语法: send_timeout time;<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>发送RST包来重置连接</p>\n<blockquote>\n<p>语法: reset_timeout_connection on|off;<br><br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>关闭用户的连接方式</p>\n<blockquote>\n<p>语法： lingering_close on|off|always<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>关闭用户的链接方式的延迟时间</p>\n<blockquote>\n<p>语法： lingering_time time;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>无数据情况下关闭用户链接的超时时间</p>\n<blockquote>\n<p>语法： lingering_timeout time;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>禁用多个http请求复用同一个http长链接（禁用keepalive功能）</p>\n<blockquote>\n<p>语法： keepalive_disable [msie6|safria|none]…;<br><br>配饰块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>keepalive超时时间</p>\n<blockquote>\n<p>语法： keepalive_timeout time;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>一个keepalive长连接上允许承载的最大请求数</p>\n<blockquote>\n<p>语法： keepalive_requests n;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>对keepalive是否启用TCP_NODELAY选项</p>\n<blockquote>\n<p>语法： tcp_nodelay on|off;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>是否开启FreeBSD系统上的TCP_NOPUSH或linux系统上的TCP_CORK功能</p>\n<blockquote>\n<p>语法： tcp_nopush on|off;<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"MIME类型的设置\"><a href=\"#MIME类型的设置\" class=\"headerlink\" title=\"MIME类型的设置\"></a>MIME类型的设置</h2><ul>\n<li><p>MIME type与文件扩展映射</p>\n<blockquote>\n<p>语法： type {…};<br><br>配置块： http, server, location</p>\n</blockquote>\n</li>\n<li><p>默认MIME type</p>\n<blockquote>\n<p>语法: default_type MIME-type;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>MIME type散列桶占用内存的大小</p>\n<blockquote>\n<p>语法: types_hash_bucket_size size;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>MIME type散列桶占用最大内存的大小</p>\n<blockquote>\n<p>语法: type_hash_max_size size;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"对客户端请求的限制\"><a href=\"#对客户端请求的限制\" class=\"headerlink\" title=\"对客户端请求的限制\"></a>对客户端请求的限制</h2><ul>\n<li><p>按HTTP方法名限制用户请求</p>\n<blockquote>\n<p>语法: limit_except method … {…};<br>配置块: location</p>\n</blockquote>\n</li>\n<li><p>HTTP请求包体的最大值</p>\n<blockquote>\n<p>语法: clinet_max_body_size size;<br>配置块: http、server、location</p>\n</blockquote>\n</li>\n<li><p>对请求的速度</p>\n<blockquote>\n<p>语法: limit_rate speed;<br>配置块: http、server、location、if</p>\n</blockquote>\n</li>\n<li><p>对请求限速的延迟市场</p>\n<blockquote>\n<p>语法: limit_rate_after time;<br>配置块: http、server、location、if</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"文件操作的优化\"><a href=\"#文件操作的优化\" class=\"headerlink\" title=\"文件操作的优化\"></a>文件操作的优化</h2><ul>\n<li><p>sendfile系统调用</p>\n<blockquote>\n<p>语法: sendfile on|off;<br>配置块: http、server、location</p>\n</blockquote>\n</li>\n<li><p>AIO系统调用</p>\n<blockquote>\n<p>语法: aio on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>directio(linux系统以O_DIRECT方式只读文件,缓冲区大小)</p>\n<blockquote>\n<p>语法: directio size|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>directio方式读取文件时的对齐方式</p>\n<blockquote>\n<p>语法: directio_alignment size;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>打开缓存功能</p>\n<blockquote>\n<p>语法: open_file_cache max=N[inactive=time]|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>是否缓存打开文件错误信息</p>\n<blockquote>\n<p>语法: open_file_cache_errors on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>不被淘汰的最小次数</p>\n<blockquote>\n<p>语法: open_file_cache_min_users number;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>检验缓存中元素有效性的频率</p>\n<blockquote>\n<p>语法: open_file_cache_valid time;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"对客户端请求的特殊处理\"><a href=\"#对客户端请求的特殊处理\" class=\"headerlink\" title=\"对客户端请求的特殊处理\"></a>对客户端请求的特殊处理</h2><ul>\n<li><p>忽略不合法的HTTP头部</p>\n<blockquote>\n<p>语法: ignore_invalid_headers on|off;<br>配置块: http, server</p>\n</blockquote>\n</li>\n<li><p>HTTP头部是否允许下划线</p>\n<blockquote>\n<p>语法: underscores_in_headers on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>对If-Modified-Since头部的策略处理</p>\n<blockquote>\n<p>语法: if_modified_since [off|exact|before];<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>文件未找到时是否记录到error日志</p>\n<blockquote>\n<p>语法: log_not_fount off|on;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>是否匹配相邻的’/‘</p>\n<blockquote>\n<p>语法: merge_slashes on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>DNS解析地址</p>\n<blockquote>\n<p>语法: resolver address …;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>DNS解析地址超时时间</p>\n<blockquote>\n<p>语法: resolver_timeout time;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>返回错误页面时,是否在Server中注明nginx版本</p>\n<blockquote>\n<p>语法: server_tokens on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"ngx-http-core-module模块提供的变量\"><a href=\"#ngx-http-core-module模块提供的变量\" class=\"headerlink\" title=\"ngx_http_core_module模块提供的变量\"></a>ngx_http_core_module模块提供的变量</h2><p><img src=\"/image/nginx/访问上游服务器时可使用的变量.png\" alt=\"访问上游服务器时可使用的变量\"></p>\n<h2 id=\"反向代理服务器的基本原理\"><a href=\"#反向代理服务器的基本原理\" class=\"headerlink\" title=\"反向代理服务器的基本原理\"></a>反向代理服务器的基本原理</h2><p>基本原来的流程图如下：</p>\n<p><img src=\"/image/nginx/反向代理服务器转发请求流程.png\" alt=\"反向代理服务器转发请求流程\"></p>\n<h2 id=\"负载均衡的基本配置\"><a href=\"#负载均衡的基本配置\" class=\"headerlink\" title=\"负载均衡的基本配置\"></a>负载均衡的基本配置</h2><ul>\n<li><p>upstream块</p>\n<blockquote>\n<p>语法: upstream name {…};<br>配置块: http  </p>\n</blockquote>\n</li>\n<li><p>server  </p>\n<blockquote>\n<p>语法: server name [parameters];<br>配置块: upstream</p>\n</blockquote>\n</li>\n<li><p>ip_hash</p>\n<blockquote>\n<p>语法: ip_hash;<br>配置块: upstream</p>\n</blockquote>\n</li>\n<li><p>样例:</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">upstream</span> tianshenjr &#123;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#ip_hash; 说明:与weight不可共存;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">server</span> dev.tianshenjr.com weight=<span class=\"number\">4</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8080</span> max_fails=<span class=\"number\">3</span> fail_timeout=<span class=\"number\">30s</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">server</span> unix:/tmp/api.tianshenjr.com;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"section\">server</span> &#123;  </span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;  </span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://www.tianshenjr.com  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>记录日志时支持的变量</p>\n</li>\n</ul>\n<h2 id=\"反向代理的基本配置\"><a href=\"#反向代理的基本配置\" class=\"headerlink\" title=\"反向代理的基本配置\"></a>反向代理的基本配置</h2><ul>\n<li><p>proxy_pass</p>\n<blockquote>\n<p>语法: proxy_pass URL;<br>配置块: location, if</p>\n</blockquote>\n</li>\n<li><p>proxy_method</p>\n<blockquote>\n<p>语法: proxy_method method;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_hide_header</p>\n<blockquote>\n<p>语法: proxy_hide_header the_header;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_pass_header</p>\n<blockquote>\n<p>语法: proxy_pass_header the_header;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_pass_request_body</p>\n<blockquote>\n<p>语法: proxy_pass_request_body on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_pass_request_headers</p>\n<blockquote>\n<p>语法: proxy_pass_request_headers on|off;<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_redirect</p>\n<blockquote>\n<p>语法: proxy_redirect [default|off|redirect replacement];<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n<li><p>proxy_next_upstream</p>\n<blockquote>\n<p>语法: proxy_next_upstream [error|timeout|invalid_header|http_500|http_502|http_503|http_504|http_404|off];<br>配置块: http, server, location</p>\n</blockquote>\n</li>\n</ul>\n<p>扩展阅读<br>   <a href=\"http://wiki.nginx.org/Modules\" target=\"_blank\" rel=\"noopener\">http://wiki.nginx.org/Modules</a></p>\n<h1 id=\"开发HTTP模块\"><a href=\"#开发HTTP模块\" class=\"headerlink\" title=\"开发HTTP模块\"></a>开发HTTP模块</h1><h2 id=\"如何调用HTTP模块\"><a href=\"#如何调用HTTP模块\" class=\"headerlink\" title=\"如何调用HTTP模块\"></a>如何调用HTTP模块</h2><p><img src=\"/image/nginx/nginx http模块调用简化流程.png\" alt=\"http模块调用简化流程\"></p>\n<h2 id=\"类型封装\"><a href=\"#类型封装\" class=\"headerlink\" title=\"类型封装\"></a>类型封装</h2><ul>\n<li><p>整型</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">intptr_t</span> <span class=\"keyword\">ngx_int_t</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">uintptr_t</span> <span class=\"keyword\">ngx_uint_t</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ngx_str_t 数据结构</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">size_t</span>      len;</span><br><span class=\"line\">    u_char      *data;</span><br><span class=\"line\">&#125; <span class=\"keyword\">ngx_str_t</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ngx_list_t 数据结构</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ngx_list_part_s</span> <span class=\"title\">ngx_list_part_t</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">ngx_list</span> _<span class=\"title\">part_s</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span>                *elts;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_uint_t</span>          nelts;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_list_part_t</span>     *next;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">ngx_list_part_t</span>     *last;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_list_part_t</span>     part;</span><br><span class=\"line\">    <span class=\"keyword\">size_t</span>              size;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_unit_t</span>          nalloc;</span><br><span class=\"line\">    <span class=\"keyword\">ngx_pool_t</span>          *pool;</span><br><span class=\"line\">&#125; <span class=\"keyword\">ngx_list_t</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ngx_table_elt_t 数据结构</p>\n</li>\n<li>ngx_buf_t 数据结构</li>\n<li>ngx_chain_t 数据结构</li>\n</ul>"},{"title":"nginx的常用配置与属性","date":"2020-06-12T00:59:00.966Z","_content":"# 命令行指令\n重载-不重新启动nginx的情况下，重新加载新修改的配置文件：\nnginx -s reload\n\n热部署-业务需要，nginx重新编译增加了新的第三方模块，但是线上环境正在运行，不能冒昧的重启nginx，因为有很多正常请求的还未结束，这种场景下可以使用热部署方式。新产生的请求使用新的nginx，而老的请求暂时使 1000用老的nginx，等待全部老请求执行完毕，再关闭老的nginx：\ncp nginx nginx.old\nkill -USR2 nginx的主进程号\nkill -WINCH nginx的主进程号\n","source":"_posts/nginx/nginx200610.md","raw":"---\ntitle: nginx的常用配置与属性  \ndate: '2020年06月10日'  \ntags: nginx\ncategories: 技术架构\n---\n# 命令行指令\n重载-不重新启动nginx的情况下，重新加载新修改的配置文件：\nnginx -s reload\n\n热部署-业务需要，nginx重新编译增加了新的第三方模块，但是线上环境正在运行，不能冒昧的重启nginx，因为有很多正常请求的还未结束，这种场景下可以使用热部署方式。新产生的请求使用新的nginx，而老的请求暂时使 1000用老的nginx，等待全部老请求执行完毕，再关闭老的nginx：\ncp nginx nginx.old\nkill -USR2 nginx的主进程号\nkill -WINCH nginx的主进程号\n","slug":"nginx/nginx200610","published":1,"updated":"2020-06-12T00:59:00.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjfq000do8exfe68i8e4","content":"<h1 id=\"命令行指令\"><a href=\"#命令行指令\" class=\"headerlink\" title=\"命令行指令\"></a>命令行指令</h1><p>重载-不重新启动nginx的情况下，重新加载新修改的配置文件：<br>nginx -s reload</p>\n<p>热部署-业务需要，nginx重新编译增加了新的第三方模块，但是线上环境正在运行，不能冒昧的重启nginx，因为有很多正常请求的还未结束，这种场景下可以使用热部署方式。新产生的请求使用新的nginx，而老的请求暂时使 1000用老的nginx，等待全部老请求执行完毕，再关闭老的nginx：<br>cp nginx nginx.old<br>kill -USR2 nginx的主进程号<br>kill -WINCH nginx的主进程号</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"命令行指令\"><a href=\"#命令行指令\" class=\"headerlink\" title=\"命令行指令\"></a>命令行指令</h1><p>重载-不重新启动nginx的情况下，重新加载新修改的配置文件：<br>nginx -s reload</p>\n<p>热部署-业务需要，nginx重新编译增加了新的第三方模块，但是线上环境正在运行，不能冒昧的重启nginx，因为有很多正常请求的还未结束，这种场景下可以使用热部署方式。新产生的请求使用新的nginx，而老的请求暂时使 1000用老的nginx，等待全部老请求执行完毕，再关闭老的nginx：<br>cp nginx nginx.old<br>kill -USR2 nginx的主进程号<br>kill -WINCH nginx的主进程号</p>\n"},{"title":"必然的出现","date":"2017-11-12T14:44:36.000Z","_content":"\njunely-渡渡君目前从事互联网金融，那做互金的小伙伴都知道，最近炒的热火朝天，朝天热火的莫过于“区块链”先森了。我这么猴急追求前沿技术的M子，岂能坐视无为？那必须走起啊，必须要追上“区块链”先森的，说走咱就走。接下来要介绍两本关于区块链的书籍，首先精读第一本书《区块链:定义未来金融与经济新格局》。\n\n![封面](/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg)\n\n本书一共有5章，我们且慢慢道来，junely-渡渡君将里面自认精华的部分摘录出来，因此后续内容均来源于此书摘录，版权归原作者所有哦～\n\n目前世界上几乎所有国家的货币都已是信用货币。信用货币是货币发展中的现代形态,不再代表任何贵金属,并且其本身价值远远低于货币价值,已经和商品属性彻底脱钩。\n\n在实物货币阶段,货币以实物商品的形式表现出来。从表面上看货币是有价值的商品,但是,人们出卖商品换取实物货币时需要的不是实物货币本身,而是实物货币交换其他商品的能力,即购买力。换句话说,人们之所以能接受实物货币,本质上并不是因为实物货币是有价值的商品,而是因为其相信实物货币是信用的象征,它可以提供一般购买力。所以无论是实物货币还是信用货币,信用都是货币更为本职的属性。也可以说,信用是货币的创造者。\n\n互联网的核心精神是开放、共享、去中心化、自下而上、多元价值等，这些说法没有错，但绝不是由于互联网的出现才产生的，而是因为市场这只看不见的手导致人类社会本身就是有这种天然倾向。技术的进步导致交流更为高效，这样的强项也就被进一步放大。所谓互联网精神，只是由于拥有了新的信息传递工作，是人类行为的自然投射。\n\n信用是制造货币的真正原材料。而区块链通过构造一个可以量化信用的经济系统，使得一个点对点的电子现金系统--比特币的出现成为可能。或者说，区块链创造了一个数字化的、可以点对点传输价值的信用系统。\n","source":"_posts/qkl/qukuailian171214.md","raw":"---\ntitle: 必然的出现  \ndate: '2017-11-12 22:44:36'  \ntags: 读书摘录 区块链\ncategories: 区块链:定义未来金融与经济新格局\n---\n\njunely-渡渡君目前从事互联网金融，那做互金的小伙伴都知道，最近炒的热火朝天，朝天热火的莫过于“区块链”先森了。我这么猴急追求前沿技术的M子，岂能坐视无为？那必须走起啊，必须要追上“区块链”先森的，说走咱就走。接下来要介绍两本关于区块链的书籍，首先精读第一本书《区块链:定义未来金融与经济新格局》。\n\n![封面](/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg)\n\n本书一共有5章，我们且慢慢道来，junely-渡渡君将里面自认精华的部分摘录出来，因此后续内容均来源于此书摘录，版权归原作者所有哦～\n\n目前世界上几乎所有国家的货币都已是信用货币。信用货币是货币发展中的现代形态,不再代表任何贵金属,并且其本身价值远远低于货币价值,已经和商品属性彻底脱钩。\n\n在实物货币阶段,货币以实物商品的形式表现出来。从表面上看货币是有价值的商品,但是,人们出卖商品换取实物货币时需要的不是实物货币本身,而是实物货币交换其他商品的能力,即购买力。换句话说,人们之所以能接受实物货币,本质上并不是因为实物货币是有价值的商品,而是因为其相信实物货币是信用的象征,它可以提供一般购买力。所以无论是实物货币还是信用货币,信用都是货币更为本职的属性。也可以说,信用是货币的创造者。\n\n互联网的核心精神是开放、共享、去中心化、自下而上、多元价值等，这些说法没有错，但绝不是由于互联网的出现才产生的，而是因为市场这只看不见的手导致人类社会本身就是有这种天然倾向。技术的进步导致交流更为高效，这样的强项也就被进一步放大。所谓互联网精神，只是由于拥有了新的信息传递工作，是人类行为的自然投射。\n\n信用是制造货币的真正原材料。而区块链通过构造一个可以量化信用的经济系统，使得一个点对点的电子现金系统--比特币的出现成为可能。或者说，区块链创造了一个数字化的、可以点对点传输价值的信用系统。\n","slug":"qkl/qukuailian171214","published":1,"updated":"2020-06-12T00:53:51.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjfs000eo8exxbn9g0fh","content":"<p>junely-渡渡君目前从事互联网金融，那做互金的小伙伴都知道，最近炒的热火朝天，朝天热火的莫过于“区块链”先森了。我这么猴急追求前沿技术的M子，岂能坐视无为？那必须走起啊，必须要追上“区块链”先森的，说走咱就走。接下来要介绍两本关于区块链的书籍，首先精读第一本书《区块链:定义未来金融与经济新格局》。</p>\n<p><img src=\"/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg\" alt=\"封面\"></p>\n<p>本书一共有5章，我们且慢慢道来，junely-渡渡君将里面自认精华的部分摘录出来，因此后续内容均来源于此书摘录，版权归原作者所有哦～</p>\n<p>目前世界上几乎所有国家的货币都已是信用货币。信用货币是货币发展中的现代形态,不再代表任何贵金属,并且其本身价值远远低于货币价值,已经和商品属性彻底脱钩。</p>\n<p>在实物货币阶段,货币以实物商品的形式表现出来。从表面上看货币是有价值的商品,但是,人们出卖商品换取实物货币时需要的不是实物货币本身,而是实物货币交换其他商品的能力,即购买力。换句话说,人们之所以能接受实物货币,本质上并不是因为实物货币是有价值的商品,而是因为其相信实物货币是信用的象征,它可以提供一般购买力。所以无论是实物货币还是信用货币,信用都是货币更为本职的属性。也可以说,信用是货币的创造者。</p>\n<p>互联网的核心精神是开放、共享、去中心化、自下而上、多元价值等，这些说法没有错，但绝不是由于互联网的出现才产生的，而是因为市场这只看不见的手导致人类社会本身就是有这种天然倾向。技术的进步导致交流更为高效，这样的强项也就被进一步放大。所谓互联网精神，只是由于拥有了新的信息传递工作，是人类行为的自然投射。</p>\n<p>信用是制造货币的真正原材料。而区块链通过构造一个可以量化信用的经济系统，使得一个点对点的电子现金系统–比特币的出现成为可能。或者说，区块链创造了一个数字化的、可以点对点传输价值的信用系统。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>junely-渡渡君目前从事互联网金融，那做互金的小伙伴都知道，最近炒的热火朝天，朝天热火的莫过于“区块链”先森了。我这么猴急追求前沿技术的M子，岂能坐视无为？那必须走起啊，必须要追上“区块链”先森的，说走咱就走。接下来要介绍两本关于区块链的书籍，首先精读第一本书《区块链:定义未来金融与经济新格局》。</p>\n<p><img src=\"/image/qukuanlian/区块链:定义未来金融与经济新格局.jpg\" alt=\"封面\"></p>\n<p>本书一共有5章，我们且慢慢道来，junely-渡渡君将里面自认精华的部分摘录出来，因此后续内容均来源于此书摘录，版权归原作者所有哦～</p>\n<p>目前世界上几乎所有国家的货币都已是信用货币。信用货币是货币发展中的现代形态,不再代表任何贵金属,并且其本身价值远远低于货币价值,已经和商品属性彻底脱钩。</p>\n<p>在实物货币阶段,货币以实物商品的形式表现出来。从表面上看货币是有价值的商品,但是,人们出卖商品换取实物货币时需要的不是实物货币本身,而是实物货币交换其他商品的能力,即购买力。换句话说,人们之所以能接受实物货币,本质上并不是因为实物货币是有价值的商品,而是因为其相信实物货币是信用的象征,它可以提供一般购买力。所以无论是实物货币还是信用货币,信用都是货币更为本职的属性。也可以说,信用是货币的创造者。</p>\n<p>互联网的核心精神是开放、共享、去中心化、自下而上、多元价值等，这些说法没有错，但绝不是由于互联网的出现才产生的，而是因为市场这只看不见的手导致人类社会本身就是有这种天然倾向。技术的进步导致交流更为高效，这样的强项也就被进一步放大。所谓互联网精神，只是由于拥有了新的信息传递工作，是人类行为的自然投射。</p>\n<p>信用是制造货币的真正原材料。而区块链通过构造一个可以量化信用的经济系统，使得一个点对点的电子现金系统–比特币的出现成为可能。或者说，区块链创造了一个数字化的、可以点对点传输价值的信用系统。</p>\n"},{"title":"区块链是什么","date":"2017-12-17T08:31:10.000Z","_content":"## 记账货币\n\n区块链的本质是一种去中心化的记账系统，而比特币正是这个系统上承载的“以数字形式存在”的货币。我们可以认为区块链与比特币之间的关系就是凯恩斯所说的记账货币与货币之间的关系，也可以用菲利克斯-马丁对货币的理解来说明两者的关系--比特币只是记账的表征，而区块链就是背后的一套由信用记录以及用心记录的清算构成的体系。\n\n## 天才的发明\n\n要了解比特币的内在优雅。不是软件使得比特币如此有效，而是经济学。--罗比特-沃伦斯基\n\n因为账本上的内容必须是唯一的，所以就导致记账是一种天然的中心化行为。在通信手段不发达的时代，这是必然的选择；在如今的信息时代，中心化的记账方式依然覆盖了社会的方方面面。然而，中心化的记账却有一些显而易见的弱点：一旦这个中心出现问题，如被篡改、被损坏，整个系统就会面临危机乃至崩溃。\n\n这种中心化的记账方式对中心本身的能力、相应的监管法律和手段以及参与者对其的信任都有极高的要求。\n\n那么区块链是靠怎样的架构设计最终解决了去中心化记账的难题呢？竞争记账机制成为了解决问题的关键。\n这里我们先引入一个称为“节点”的概念。在当前的信息时代，负责记账的自然是计算机，而在记账系统中接入的每一台计算机都可以称作节点。\n\n所谓的竞争记账，就是以每个节点的计算能力（“算力”）来竞争记账权的一种机制。在比特币系统中，大约每十分钟进行一轮算力竞赛，竞赛的胜利者获得一次记账的权利，即向区块链这个总账本写入一个新区块的权利。这样，在一定时间内，只有竞争的胜利者才能完成一轮记账并向其他节点同步新增账本信息，这个过程就是区块产生的过程。\n\n不过，算力竞争是要付出成本的，没有激励，节点就没有进行竞争的动力。在中本聪的设计里，每轮竞争胜出并完成记账的节点将可以获得系统给予的一定数量的比特币奖励。这个奖励的过程同时也是比特币的发行过程。节点不停的进行计算，以期获得系统发放的比特币。\n\n最终，区块链通过构造一个竞争-记账-奖励为核心的经济系统，解决了去中心化记账的难题。比特币借助区块链打造了一个正向循环的经济系统，才使得起在没有强大的中心化机构或组织推动的情况下，自然的生长出来并发展壮大。\n\n## 共识机制与价值载体\n\n比特币区块链的共识机制是通过工作证明（POW）来实现的，这种机制的优点是显而易见的，每个节点可以平等地参与竞争，并通过激励构建了一个正循环的经济系统，从而逐渐积累了保护系统安全的庞大算力。\n\n然而对工作量证明机制也有一些批评。一个常见的指责是“浪费”能源，因为节点进行算力竞赛是要消耗电力的。目前，投入挖矿竞争的总算力以及接近投入挖矿竞争的总算力以及接近1300P，挖矿也因此成了能源秘籍型的行业。\n\n所谓公有链，是指比特币区块链这样的完全去中心化的、不受任何机构控制的区块链；而私有链则是指存在一定的中心化控制的区块链。\n\n类似比特币区块链这样的公有链尚不能满足金融机构的一些基本要求，比如了解你的客户（KYC）、反洗钱（AML）等，因此，金融机构对私有链的兴趣更大。目前私有链最著名的例子是R3CEV公司牵头的区块链联名，它已经吸引了全球四十多家大型银行的加入，其中不乏美国银行、摩根大通等巨头的身影。\n\n事实上，自比特币诞生之日起，它的模仿者或者竞争者就层出不穷。其中有很多都只是对比特币简单的复制和模仿，没有任何创新，我们将这种成为山寨币。还有一些并不是简单的模仿，而是有自己的创新和专注的领域，这种类型的币我们称之为竞争币。在数字货币的市值方面，尽管比特币遥遥领先，但之后诞生的莱特币、以太坊的市值都蹭短暂地超过10亿美元。\n\n数字资产和区块链具有天然的亲和性。一般意义上讲，数字资产包含任何形式的以二进制格式存在并且具备所有权属性的东西。而在较为狭义的理解中，数字资产则是指以电子数据形式存在的，在日常生活中持有以备出售的非货币性资产，比如典型是股票、债券等金融产品。\n\n如果说比特币等基于区块链的数字货币是一个刚诞生不久的婴儿，那么基于区块链的非货币形式的价值承载则还是一个孕育中的胚胎。作为价值载体，区块链可以承载的价值是非常丰富的。随着区块链技术的发展和相关基础设施的不断完善，我们相信区块链承载价值的范围不断扩大。\n\n## 当交易变得智能\n\n比特币的脚本语言非常简单，仅有256条指令，其中75个是被保留的，尚未被赋予任何含义。比特币脚本中的指令与其他编程语言类似，包含基本的语法、逻辑。除此之外还包括一些加密指令，如哈密函数、签名验证等。\n\n比特币的多重签名技术就是使用脚本实现可变成交易的一个典型例子。其基本原理是，在系统里创建一个由多个人共同管理的账户，只有达到事先约定数量的人的同意，才能动用该账户的钱，并且这个过程是由系统本身保障执行的，不需要任何第三方介入。\n\n一般来说，一个比特币地址对应一个私钥，动用这个地址中的资金只需要该私钥的掌握者单独发起签名即可。而多重签名技术就是多个私钥的共同签名才能动用一笔资金。比如说，某笔资金对应3个私钥，而必须至少有其中任意2个私钥参与签名才能动用，只有1个私钥参与签名是无效的。这个2/3可以推广到任意的m/n，比如3/5，4/7,6/11等，当然m要小于等于n。\n\n从本质上讲，智能合约工作原理类似于计算机程序的条件执行语句。当一个预先编好的条件被触发时，智能合约执行相关的合同条款。由于区块链的可编程性，因此智能合约在区块链和数字货币上的应用是水到渠成的事情。\n\n智能合约是计算机程序，所以很容易应用于其他需要的场景--增加更加细致的控制条件，完成更复杂的执行逻辑。这点类似传统的合同，我们也可以认为，智能合约就是合同以代码的形式搬到了区块链上，但这就带来了根本的区别：它不需要任何人监督合同的执行，订立合同的双方也无法在合同完成前单方面违约，一切都是按合同的约定自动执行的。相信随着区块链的普及和交易智能化的发展，它将会对未来的交易模式与商业结构带来巨大的影响。\n\n## 将区块链连接起来\n\n中本聪创造区块链的初衷是为了实现一个点对点的电子现金系统。因此，当我们对于区块链的用途有更高的期待时，它的一些局限就体现出来了。\n\n本质上，区块链是不同数字价值的载体，而侧链技术则是连接不同区块链的通路。现在还不能断言最终成熟的侧链技术形态，甚至我们也不知道未来真正大规模应用于区块链件连接的技术是否会以“侧链技术”的名义出现，但是侧链技术的理念及核心功能的发展与成熟是毋庸置疑的。\n\n## 区块链的未来\n","source":"_posts/qkl/qukuailian171217.md","raw":"---\ntitle: 区块链是什么  \ndate: '2017-12-17 16:31:10'  \ntags: 读书摘录 区块链\ncategories: 区块链:定义未来金融与经济新格局\n---\n## 记账货币\n\n区块链的本质是一种去中心化的记账系统，而比特币正是这个系统上承载的“以数字形式存在”的货币。我们可以认为区块链与比特币之间的关系就是凯恩斯所说的记账货币与货币之间的关系，也可以用菲利克斯-马丁对货币的理解来说明两者的关系--比特币只是记账的表征，而区块链就是背后的一套由信用记录以及用心记录的清算构成的体系。\n\n## 天才的发明\n\n要了解比特币的内在优雅。不是软件使得比特币如此有效，而是经济学。--罗比特-沃伦斯基\n\n因为账本上的内容必须是唯一的，所以就导致记账是一种天然的中心化行为。在通信手段不发达的时代，这是必然的选择；在如今的信息时代，中心化的记账方式依然覆盖了社会的方方面面。然而，中心化的记账却有一些显而易见的弱点：一旦这个中心出现问题，如被篡改、被损坏，整个系统就会面临危机乃至崩溃。\n\n这种中心化的记账方式对中心本身的能力、相应的监管法律和手段以及参与者对其的信任都有极高的要求。\n\n那么区块链是靠怎样的架构设计最终解决了去中心化记账的难题呢？竞争记账机制成为了解决问题的关键。\n这里我们先引入一个称为“节点”的概念。在当前的信息时代，负责记账的自然是计算机，而在记账系统中接入的每一台计算机都可以称作节点。\n\n所谓的竞争记账，就是以每个节点的计算能力（“算力”）来竞争记账权的一种机制。在比特币系统中，大约每十分钟进行一轮算力竞赛，竞赛的胜利者获得一次记账的权利，即向区块链这个总账本写入一个新区块的权利。这样，在一定时间内，只有竞争的胜利者才能完成一轮记账并向其他节点同步新增账本信息，这个过程就是区块产生的过程。\n\n不过，算力竞争是要付出成本的，没有激励，节点就没有进行竞争的动力。在中本聪的设计里，每轮竞争胜出并完成记账的节点将可以获得系统给予的一定数量的比特币奖励。这个奖励的过程同时也是比特币的发行过程。节点不停的进行计算，以期获得系统发放的比特币。\n\n最终，区块链通过构造一个竞争-记账-奖励为核心的经济系统，解决了去中心化记账的难题。比特币借助区块链打造了一个正向循环的经济系统，才使得起在没有强大的中心化机构或组织推动的情况下，自然的生长出来并发展壮大。\n\n## 共识机制与价值载体\n\n比特币区块链的共识机制是通过工作证明（POW）来实现的，这种机制的优点是显而易见的，每个节点可以平等地参与竞争，并通过激励构建了一个正循环的经济系统，从而逐渐积累了保护系统安全的庞大算力。\n\n然而对工作量证明机制也有一些批评。一个常见的指责是“浪费”能源，因为节点进行算力竞赛是要消耗电力的。目前，投入挖矿竞争的总算力以及接近投入挖矿竞争的总算力以及接近1300P，挖矿也因此成了能源秘籍型的行业。\n\n所谓公有链，是指比特币区块链这样的完全去中心化的、不受任何机构控制的区块链；而私有链则是指存在一定的中心化控制的区块链。\n\n类似比特币区块链这样的公有链尚不能满足金融机构的一些基本要求，比如了解你的客户（KYC）、反洗钱（AML）等，因此，金融机构对私有链的兴趣更大。目前私有链最著名的例子是R3CEV公司牵头的区块链联名，它已经吸引了全球四十多家大型银行的加入，其中不乏美国银行、摩根大通等巨头的身影。\n\n事实上，自比特币诞生之日起，它的模仿者或者竞争者就层出不穷。其中有很多都只是对比特币简单的复制和模仿，没有任何创新，我们将这种成为山寨币。还有一些并不是简单的模仿，而是有自己的创新和专注的领域，这种类型的币我们称之为竞争币。在数字货币的市值方面，尽管比特币遥遥领先，但之后诞生的莱特币、以太坊的市值都蹭短暂地超过10亿美元。\n\n数字资产和区块链具有天然的亲和性。一般意义上讲，数字资产包含任何形式的以二进制格式存在并且具备所有权属性的东西。而在较为狭义的理解中，数字资产则是指以电子数据形式存在的，在日常生活中持有以备出售的非货币性资产，比如典型是股票、债券等金融产品。\n\n如果说比特币等基于区块链的数字货币是一个刚诞生不久的婴儿，那么基于区块链的非货币形式的价值承载则还是一个孕育中的胚胎。作为价值载体，区块链可以承载的价值是非常丰富的。随着区块链技术的发展和相关基础设施的不断完善，我们相信区块链承载价值的范围不断扩大。\n\n## 当交易变得智能\n\n比特币的脚本语言非常简单，仅有256条指令，其中75个是被保留的，尚未被赋予任何含义。比特币脚本中的指令与其他编程语言类似，包含基本的语法、逻辑。除此之外还包括一些加密指令，如哈密函数、签名验证等。\n\n比特币的多重签名技术就是使用脚本实现可变成交易的一个典型例子。其基本原理是，在系统里创建一个由多个人共同管理的账户，只有达到事先约定数量的人的同意，才能动用该账户的钱，并且这个过程是由系统本身保障执行的，不需要任何第三方介入。\n\n一般来说，一个比特币地址对应一个私钥，动用这个地址中的资金只需要该私钥的掌握者单独发起签名即可。而多重签名技术就是多个私钥的共同签名才能动用一笔资金。比如说，某笔资金对应3个私钥，而必须至少有其中任意2个私钥参与签名才能动用，只有1个私钥参与签名是无效的。这个2/3可以推广到任意的m/n，比如3/5，4/7,6/11等，当然m要小于等于n。\n\n从本质上讲，智能合约工作原理类似于计算机程序的条件执行语句。当一个预先编好的条件被触发时，智能合约执行相关的合同条款。由于区块链的可编程性，因此智能合约在区块链和数字货币上的应用是水到渠成的事情。\n\n智能合约是计算机程序，所以很容易应用于其他需要的场景--增加更加细致的控制条件，完成更复杂的执行逻辑。这点类似传统的合同，我们也可以认为，智能合约就是合同以代码的形式搬到了区块链上，但这就带来了根本的区别：它不需要任何人监督合同的执行，订立合同的双方也无法在合同完成前单方面违约，一切都是按合同的约定自动执行的。相信随着区块链的普及和交易智能化的发展，它将会对未来的交易模式与商业结构带来巨大的影响。\n\n## 将区块链连接起来\n\n中本聪创造区块链的初衷是为了实现一个点对点的电子现金系统。因此，当我们对于区块链的用途有更高的期待时，它的一些局限就体现出来了。\n\n本质上，区块链是不同数字价值的载体，而侧链技术则是连接不同区块链的通路。现在还不能断言最终成熟的侧链技术形态，甚至我们也不知道未来真正大规模应用于区块链件连接的技术是否会以“侧链技术”的名义出现，但是侧链技术的理念及核心功能的发展与成熟是毋庸置疑的。\n\n## 区块链的未来\n","slug":"qkl/qukuailian171217","published":1,"updated":"2020-06-12T00:53:51.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjfu000ho8ex79dbfpa5","content":"<h2 id=\"记账货币\"><a href=\"#记账货币\" class=\"headerlink\" title=\"记账货币\"></a>记账货币</h2><p>区块链的本质是一种去中心化的记账系统，而比特币正是这个系统上承载的“以数字形式存在”的货币。我们可以认为区块链与比特币之间的关系就是凯恩斯所说的记账货币与货币之间的关系，也可以用菲利克斯-马丁对货币的理解来说明两者的关系–比特币只是记账的表征，而区块链就是背后的一套由信用记录以及用心记录的清算构成的体系。</p>\n<h2 id=\"天才的发明\"><a href=\"#天才的发明\" class=\"headerlink\" title=\"天才的发明\"></a>天才的发明</h2><p>要了解比特币的内在优雅。不是软件使得比特币如此有效，而是经济学。–罗比特-沃伦斯基</p>\n<p>因为账本上的内容必须是唯一的，所以就导致记账是一种天然的中心化行为。在通信手段不发达的时代，这是必然的选择；在如今的信息时代，中心化的记账方式依然覆盖了社会的方方面面。然而，中心化的记账却有一些显而易见的弱点：一旦这个中心出现问题，如被篡改、被损坏，整个系统就会面临危机乃至崩溃。</p>\n<p>这种中心化的记账方式对中心本身的能力、相应的监管法律和手段以及参与者对其的信任都有极高的要求。</p>\n<p>那么区块链是靠怎样的架构设计最终解决了去中心化记账的难题呢？竞争记账机制成为了解决问题的关键。<br>这里我们先引入一个称为“节点”的概念。在当前的信息时代，负责记账的自然是计算机，而在记账系统中接入的每一台计算机都可以称作节点。</p>\n<p>所谓的竞争记账，就是以每个节点的计算能力（“算力”）来竞争记账权的一种机制。在比特币系统中，大约每十分钟进行一轮算力竞赛，竞赛的胜利者获得一次记账的权利，即向区块链这个总账本写入一个新区块的权利。这样，在一定时间内，只有竞争的胜利者才能完成一轮记账并向其他节点同步新增账本信息，这个过程就是区块产生的过程。</p>\n<p>不过，算力竞争是要付出成本的，没有激励，节点就没有进行竞争的动力。在中本聪的设计里，每轮竞争胜出并完成记账的节点将可以获得系统给予的一定数量的比特币奖励。这个奖励的过程同时也是比特币的发行过程。节点不停的进行计算，以期获得系统发放的比特币。</p>\n<p>最终，区块链通过构造一个竞争-记账-奖励为核心的经济系统，解决了去中心化记账的难题。比特币借助区块链打造了一个正向循环的经济系统，才使得起在没有强大的中心化机构或组织推动的情况下，自然的生长出来并发展壮大。</p>\n<h2 id=\"共识机制与价值载体\"><a href=\"#共识机制与价值载体\" class=\"headerlink\" title=\"共识机制与价值载体\"></a>共识机制与价值载体</h2><p>比特币区块链的共识机制是通过工作证明（POW）来实现的，这种机制的优点是显而易见的，每个节点可以平等地参与竞争，并通过激励构建了一个正循环的经济系统，从而逐渐积累了保护系统安全的庞大算力。</p>\n<p>然而对工作量证明机制也有一些批评。一个常见的指责是“浪费”能源，因为节点进行算力竞赛是要消耗电力的。目前，投入挖矿竞争的总算力以及接近投入挖矿竞争的总算力以及接近1300P，挖矿也因此成了能源秘籍型的行业。</p>\n<p>所谓公有链，是指比特币区块链这样的完全去中心化的、不受任何机构控制的区块链；而私有链则是指存在一定的中心化控制的区块链。</p>\n<p>类似比特币区块链这样的公有链尚不能满足金融机构的一些基本要求，比如了解你的客户（KYC）、反洗钱（AML）等，因此，金融机构对私有链的兴趣更大。目前私有链最著名的例子是R3CEV公司牵头的区块链联名，它已经吸引了全球四十多家大型银行的加入，其中不乏美国银行、摩根大通等巨头的身影。</p>\n<p>事实上，自比特币诞生之日起，它的模仿者或者竞争者就层出不穷。其中有很多都只是对比特币简单的复制和模仿，没有任何创新，我们将这种成为山寨币。还有一些并不是简单的模仿，而是有自己的创新和专注的领域，这种类型的币我们称之为竞争币。在数字货币的市值方面，尽管比特币遥遥领先，但之后诞生的莱特币、以太坊的市值都蹭短暂地超过10亿美元。</p>\n<p>数字资产和区块链具有天然的亲和性。一般意义上讲，数字资产包含任何形式的以二进制格式存在并且具备所有权属性的东西。而在较为狭义的理解中，数字资产则是指以电子数据形式存在的，在日常生活中持有以备出售的非货币性资产，比如典型是股票、债券等金融产品。</p>\n<p>如果说比特币等基于区块链的数字货币是一个刚诞生不久的婴儿，那么基于区块链的非货币形式的价值承载则还是一个孕育中的胚胎。作为价值载体，区块链可以承载的价值是非常丰富的。随着区块链技术的发展和相关基础设施的不断完善，我们相信区块链承载价值的范围不断扩大。</p>\n<h2 id=\"当交易变得智能\"><a href=\"#当交易变得智能\" class=\"headerlink\" title=\"当交易变得智能\"></a>当交易变得智能</h2><p>比特币的脚本语言非常简单，仅有256条指令，其中75个是被保留的，尚未被赋予任何含义。比特币脚本中的指令与其他编程语言类似，包含基本的语法、逻辑。除此之外还包括一些加密指令，如哈密函数、签名验证等。</p>\n<p>比特币的多重签名技术就是使用脚本实现可变成交易的一个典型例子。其基本原理是，在系统里创建一个由多个人共同管理的账户，只有达到事先约定数量的人的同意，才能动用该账户的钱，并且这个过程是由系统本身保障执行的，不需要任何第三方介入。</p>\n<p>一般来说，一个比特币地址对应一个私钥，动用这个地址中的资金只需要该私钥的掌握者单独发起签名即可。而多重签名技术就是多个私钥的共同签名才能动用一笔资金。比如说，某笔资金对应3个私钥，而必须至少有其中任意2个私钥参与签名才能动用，只有1个私钥参与签名是无效的。这个2/3可以推广到任意的m/n，比如3/5，4/7,6/11等，当然m要小于等于n。</p>\n<p>从本质上讲，智能合约工作原理类似于计算机程序的条件执行语句。当一个预先编好的条件被触发时，智能合约执行相关的合同条款。由于区块链的可编程性，因此智能合约在区块链和数字货币上的应用是水到渠成的事情。</p>\n<p>智能合约是计算机程序，所以很容易应用于其他需要的场景–增加更加细致的控制条件，完成更复杂的执行逻辑。这点类似传统的合同，我们也可以认为，智能合约就是合同以代码的形式搬到了区块链上，但这就带来了根本的区别：它不需要任何人监督合同的执行，订立合同的双方也无法在合同完成前单方面违约，一切都是按合同的约定自动执行的。相信随着区块链的普及和交易智能化的发展，它将会对未来的交易模式与商业结构带来巨大的影响。</p>\n<h2 id=\"将区块链连接起来\"><a href=\"#将区块链连接起来\" class=\"headerlink\" title=\"将区块链连接起来\"></a>将区块链连接起来</h2><p>中本聪创造区块链的初衷是为了实现一个点对点的电子现金系统。因此，当我们对于区块链的用途有更高的期待时，它的一些局限就体现出来了。</p>\n<p>本质上，区块链是不同数字价值的载体，而侧链技术则是连接不同区块链的通路。现在还不能断言最终成熟的侧链技术形态，甚至我们也不知道未来真正大规模应用于区块链件连接的技术是否会以“侧链技术”的名义出现，但是侧链技术的理念及核心功能的发展与成熟是毋庸置疑的。</p>\n<h2 id=\"区块链的未来\"><a href=\"#区块链的未来\" class=\"headerlink\" title=\"区块链的未来\"></a>区块链的未来</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"记账货币\"><a href=\"#记账货币\" class=\"headerlink\" title=\"记账货币\"></a>记账货币</h2><p>区块链的本质是一种去中心化的记账系统，而比特币正是这个系统上承载的“以数字形式存在”的货币。我们可以认为区块链与比特币之间的关系就是凯恩斯所说的记账货币与货币之间的关系，也可以用菲利克斯-马丁对货币的理解来说明两者的关系–比特币只是记账的表征，而区块链就是背后的一套由信用记录以及用心记录的清算构成的体系。</p>\n<h2 id=\"天才的发明\"><a href=\"#天才的发明\" class=\"headerlink\" title=\"天才的发明\"></a>天才的发明</h2><p>要了解比特币的内在优雅。不是软件使得比特币如此有效，而是经济学。–罗比特-沃伦斯基</p>\n<p>因为账本上的内容必须是唯一的，所以就导致记账是一种天然的中心化行为。在通信手段不发达的时代，这是必然的选择；在如今的信息时代，中心化的记账方式依然覆盖了社会的方方面面。然而，中心化的记账却有一些显而易见的弱点：一旦这个中心出现问题，如被篡改、被损坏，整个系统就会面临危机乃至崩溃。</p>\n<p>这种中心化的记账方式对中心本身的能力、相应的监管法律和手段以及参与者对其的信任都有极高的要求。</p>\n<p>那么区块链是靠怎样的架构设计最终解决了去中心化记账的难题呢？竞争记账机制成为了解决问题的关键。<br>这里我们先引入一个称为“节点”的概念。在当前的信息时代，负责记账的自然是计算机，而在记账系统中接入的每一台计算机都可以称作节点。</p>\n<p>所谓的竞争记账，就是以每个节点的计算能力（“算力”）来竞争记账权的一种机制。在比特币系统中，大约每十分钟进行一轮算力竞赛，竞赛的胜利者获得一次记账的权利，即向区块链这个总账本写入一个新区块的权利。这样，在一定时间内，只有竞争的胜利者才能完成一轮记账并向其他节点同步新增账本信息，这个过程就是区块产生的过程。</p>\n<p>不过，算力竞争是要付出成本的，没有激励，节点就没有进行竞争的动力。在中本聪的设计里，每轮竞争胜出并完成记账的节点将可以获得系统给予的一定数量的比特币奖励。这个奖励的过程同时也是比特币的发行过程。节点不停的进行计算，以期获得系统发放的比特币。</p>\n<p>最终，区块链通过构造一个竞争-记账-奖励为核心的经济系统，解决了去中心化记账的难题。比特币借助区块链打造了一个正向循环的经济系统，才使得起在没有强大的中心化机构或组织推动的情况下，自然的生长出来并发展壮大。</p>\n<h2 id=\"共识机制与价值载体\"><a href=\"#共识机制与价值载体\" class=\"headerlink\" title=\"共识机制与价值载体\"></a>共识机制与价值载体</h2><p>比特币区块链的共识机制是通过工作证明（POW）来实现的，这种机制的优点是显而易见的，每个节点可以平等地参与竞争，并通过激励构建了一个正循环的经济系统，从而逐渐积累了保护系统安全的庞大算力。</p>\n<p>然而对工作量证明机制也有一些批评。一个常见的指责是“浪费”能源，因为节点进行算力竞赛是要消耗电力的。目前，投入挖矿竞争的总算力以及接近投入挖矿竞争的总算力以及接近1300P，挖矿也因此成了能源秘籍型的行业。</p>\n<p>所谓公有链，是指比特币区块链这样的完全去中心化的、不受任何机构控制的区块链；而私有链则是指存在一定的中心化控制的区块链。</p>\n<p>类似比特币区块链这样的公有链尚不能满足金融机构的一些基本要求，比如了解你的客户（KYC）、反洗钱（AML）等，因此，金融机构对私有链的兴趣更大。目前私有链最著名的例子是R3CEV公司牵头的区块链联名，它已经吸引了全球四十多家大型银行的加入，其中不乏美国银行、摩根大通等巨头的身影。</p>\n<p>事实上，自比特币诞生之日起，它的模仿者或者竞争者就层出不穷。其中有很多都只是对比特币简单的复制和模仿，没有任何创新，我们将这种成为山寨币。还有一些并不是简单的模仿，而是有自己的创新和专注的领域，这种类型的币我们称之为竞争币。在数字货币的市值方面，尽管比特币遥遥领先，但之后诞生的莱特币、以太坊的市值都蹭短暂地超过10亿美元。</p>\n<p>数字资产和区块链具有天然的亲和性。一般意义上讲，数字资产包含任何形式的以二进制格式存在并且具备所有权属性的东西。而在较为狭义的理解中，数字资产则是指以电子数据形式存在的，在日常生活中持有以备出售的非货币性资产，比如典型是股票、债券等金融产品。</p>\n<p>如果说比特币等基于区块链的数字货币是一个刚诞生不久的婴儿，那么基于区块链的非货币形式的价值承载则还是一个孕育中的胚胎。作为价值载体，区块链可以承载的价值是非常丰富的。随着区块链技术的发展和相关基础设施的不断完善，我们相信区块链承载价值的范围不断扩大。</p>\n<h2 id=\"当交易变得智能\"><a href=\"#当交易变得智能\" class=\"headerlink\" title=\"当交易变得智能\"></a>当交易变得智能</h2><p>比特币的脚本语言非常简单，仅有256条指令，其中75个是被保留的，尚未被赋予任何含义。比特币脚本中的指令与其他编程语言类似，包含基本的语法、逻辑。除此之外还包括一些加密指令，如哈密函数、签名验证等。</p>\n<p>比特币的多重签名技术就是使用脚本实现可变成交易的一个典型例子。其基本原理是，在系统里创建一个由多个人共同管理的账户，只有达到事先约定数量的人的同意，才能动用该账户的钱，并且这个过程是由系统本身保障执行的，不需要任何第三方介入。</p>\n<p>一般来说，一个比特币地址对应一个私钥，动用这个地址中的资金只需要该私钥的掌握者单独发起签名即可。而多重签名技术就是多个私钥的共同签名才能动用一笔资金。比如说，某笔资金对应3个私钥，而必须至少有其中任意2个私钥参与签名才能动用，只有1个私钥参与签名是无效的。这个2/3可以推广到任意的m/n，比如3/5，4/7,6/11等，当然m要小于等于n。</p>\n<p>从本质上讲，智能合约工作原理类似于计算机程序的条件执行语句。当一个预先编好的条件被触发时，智能合约执行相关的合同条款。由于区块链的可编程性，因此智能合约在区块链和数字货币上的应用是水到渠成的事情。</p>\n<p>智能合约是计算机程序，所以很容易应用于其他需要的场景–增加更加细致的控制条件，完成更复杂的执行逻辑。这点类似传统的合同，我们也可以认为，智能合约就是合同以代码的形式搬到了区块链上，但这就带来了根本的区别：它不需要任何人监督合同的执行，订立合同的双方也无法在合同完成前单方面违约，一切都是按合同的约定自动执行的。相信随着区块链的普及和交易智能化的发展，它将会对未来的交易模式与商业结构带来巨大的影响。</p>\n<h2 id=\"将区块链连接起来\"><a href=\"#将区块链连接起来\" class=\"headerlink\" title=\"将区块链连接起来\"></a>将区块链连接起来</h2><p>中本聪创造区块链的初衷是为了实现一个点对点的电子现金系统。因此，当我们对于区块链的用途有更高的期待时，它的一些局限就体现出来了。</p>\n<p>本质上，区块链是不同数字价值的载体，而侧链技术则是连接不同区块链的通路。现在还不能断言最终成熟的侧链技术形态，甚至我们也不知道未来真正大规模应用于区块链件连接的技术是否会以“侧链技术”的名义出现，但是侧链技术的理念及核心功能的发展与成熟是毋庸置疑的。</p>\n<h2 id=\"区块链的未来\"><a href=\"#区块链的未来\" class=\"headerlink\" title=\"区块链的未来\"></a>区块链的未来</h2>"},{"title":"区块链带来的新机遇","date":"2017-12-17T13:59:42.000Z","_content":"\n# 第2章 区块链带来的新机遇\n## 数字货币产业链\n## 互联网金融\n## 物联网与共享经济\n## 新一代基础设施\n\n# 第3章 区块链的应用场景\n## 数字货币\n## 众筹\n## 清算、结算与审计\n## 智能合约\n## 版权与许可\n## 公证与记录\n\n# 第4章 区块链技术原理\n## 密码学基础\n## 区块链组成\n## 共识算法\n## 侧链技术\n","source":"_posts/qkl/qukuailian171218.md","raw":"---\ntitle: 区块链带来的新机遇  \ndate: '2017-12-17 21:59:42'  \ntags: 读书摘录 区块链\ncategories: 区块链:定义未来金融与经济新格局\n---\n\n# 第2章 区块链带来的新机遇\n## 数字货币产业链\n## 互联网金融\n## 物联网与共享经济\n## 新一代基础设施\n\n# 第3章 区块链的应用场景\n## 数字货币\n## 众筹\n## 清算、结算与审计\n## 智能合约\n## 版权与许可\n## 公证与记录\n\n# 第4章 区块链技术原理\n## 密码学基础\n## 区块链组成\n## 共识算法\n## 侧链技术\n","slug":"qkl/qukuailian171218","published":1,"updated":"2020-06-12T00:53:51.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjfw000io8exsn64ksby","content":"<h1 id=\"第2章-区块链带来的新机遇\"><a href=\"#第2章-区块链带来的新机遇\" class=\"headerlink\" title=\"第2章 区块链带来的新机遇\"></a>第2章 区块链带来的新机遇</h1><h2 id=\"数字货币产业链\"><a href=\"#数字货币产业链\" class=\"headerlink\" title=\"数字货币产业链\"></a>数字货币产业链</h2><h2 id=\"互联网金融\"><a href=\"#互联网金融\" class=\"headerlink\" title=\"互联网金融\"></a>互联网金融</h2><h2 id=\"物联网与共享经济\"><a href=\"#物联网与共享经济\" class=\"headerlink\" title=\"物联网与共享经济\"></a>物联网与共享经济</h2><h2 id=\"新一代基础设施\"><a href=\"#新一代基础设施\" class=\"headerlink\" title=\"新一代基础设施\"></a>新一代基础设施</h2><h1 id=\"第3章-区块链的应用场景\"><a href=\"#第3章-区块链的应用场景\" class=\"headerlink\" title=\"第3章 区块链的应用场景\"></a>第3章 区块链的应用场景</h1><h2 id=\"数字货币\"><a href=\"#数字货币\" class=\"headerlink\" title=\"数字货币\"></a>数字货币</h2><h2 id=\"众筹\"><a href=\"#众筹\" class=\"headerlink\" title=\"众筹\"></a>众筹</h2><h2 id=\"清算、结算与审计\"><a href=\"#清算、结算与审计\" class=\"headerlink\" title=\"清算、结算与审计\"></a>清算、结算与审计</h2><h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><h2 id=\"版权与许可\"><a href=\"#版权与许可\" class=\"headerlink\" title=\"版权与许可\"></a>版权与许可</h2><h2 id=\"公证与记录\"><a href=\"#公证与记录\" class=\"headerlink\" title=\"公证与记录\"></a>公证与记录</h2><h1 id=\"第4章-区块链技术原理\"><a href=\"#第4章-区块链技术原理\" class=\"headerlink\" title=\"第4章 区块链技术原理\"></a>第4章 区块链技术原理</h1><h2 id=\"密码学基础\"><a href=\"#密码学基础\" class=\"headerlink\" title=\"密码学基础\"></a>密码学基础</h2><h2 id=\"区块链组成\"><a href=\"#区块链组成\" class=\"headerlink\" title=\"区块链组成\"></a>区块链组成</h2><h2 id=\"共识算法\"><a href=\"#共识算法\" class=\"headerlink\" title=\"共识算法\"></a>共识算法</h2><h2 id=\"侧链技术\"><a href=\"#侧链技术\" class=\"headerlink\" title=\"侧链技术\"></a>侧链技术</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"第2章-区块链带来的新机遇\"><a href=\"#第2章-区块链带来的新机遇\" class=\"headerlink\" title=\"第2章 区块链带来的新机遇\"></a>第2章 区块链带来的新机遇</h1><h2 id=\"数字货币产业链\"><a href=\"#数字货币产业链\" class=\"headerlink\" title=\"数字货币产业链\"></a>数字货币产业链</h2><h2 id=\"互联网金融\"><a href=\"#互联网金融\" class=\"headerlink\" title=\"互联网金融\"></a>互联网金融</h2><h2 id=\"物联网与共享经济\"><a href=\"#物联网与共享经济\" class=\"headerlink\" title=\"物联网与共享经济\"></a>物联网与共享经济</h2><h2 id=\"新一代基础设施\"><a href=\"#新一代基础设施\" class=\"headerlink\" title=\"新一代基础设施\"></a>新一代基础设施</h2><h1 id=\"第3章-区块链的应用场景\"><a href=\"#第3章-区块链的应用场景\" class=\"headerlink\" title=\"第3章 区块链的应用场景\"></a>第3章 区块链的应用场景</h1><h2 id=\"数字货币\"><a href=\"#数字货币\" class=\"headerlink\" title=\"数字货币\"></a>数字货币</h2><h2 id=\"众筹\"><a href=\"#众筹\" class=\"headerlink\" title=\"众筹\"></a>众筹</h2><h2 id=\"清算、结算与审计\"><a href=\"#清算、结算与审计\" class=\"headerlink\" title=\"清算、结算与审计\"></a>清算、结算与审计</h2><h2 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h2><h2 id=\"版权与许可\"><a href=\"#版权与许可\" class=\"headerlink\" title=\"版权与许可\"></a>版权与许可</h2><h2 id=\"公证与记录\"><a href=\"#公证与记录\" class=\"headerlink\" title=\"公证与记录\"></a>公证与记录</h2><h1 id=\"第4章-区块链技术原理\"><a href=\"#第4章-区块链技术原理\" class=\"headerlink\" title=\"第4章 区块链技术原理\"></a>第4章 区块链技术原理</h1><h2 id=\"密码学基础\"><a href=\"#密码学基础\" class=\"headerlink\" title=\"密码学基础\"></a>密码学基础</h2><h2 id=\"区块链组成\"><a href=\"#区块链组成\" class=\"headerlink\" title=\"区块链组成\"></a>区块链组成</h2><h2 id=\"共识算法\"><a href=\"#共识算法\" class=\"headerlink\" title=\"共识算法\"></a>共识算法</h2><h2 id=\"侧链技术\"><a href=\"#侧链技术\" class=\"headerlink\" title=\"侧链技术\"></a>侧链技术</h2>"},{"title":"程序员值得上的优秀网站","date":"2020-06-12T05:43:45.124Z","mode":"random","random_max":110,"random_url":"https://sariay.github.io/Random-img/","_content":"\n累积推荐程序员值得关注的一些网站，会持续更新。前后无排名：  \n\n**1. 牛客网：常见的算法、大厂面试题，支持在线刷题，程序员求职利器：**\nhttps://www.nowcoder.com/\n","source":"_posts/study/web_666.md","raw":"---\ntitle: 程序员值得上的优秀网站  \ndate: '2020年06月12日'  \ntags: 程序员-优秀网站\ncategories: 学习收录\nmode: random #normal or random\n#normal_url: /img/1.jpg\nrandom_max: 110\nrandom_url: https://sariay.github.io/Random-img/\n---\n\n累积推荐程序员值得关注的一些网站，会持续更新。前后无排名：  \n\n**1. 牛客网：常见的算法、大厂面试题，支持在线刷题，程序员求职利器：**\nhttps://www.nowcoder.com/\n","slug":"study/web_666","published":1,"updated":"2020-06-12T05:43:45.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbbscjfz000jo8exh04s2cfz","content":"<p>累积推荐程序员值得关注的一些网站，会持续更新。前后无排名：  </p>\n<p><strong>1. 牛客网：常见的算法、大厂面试题，支持在线刷题，程序员求职利器：</strong><br><a href=\"https://www.nowcoder.com/\" target=\"_blank\" rel=\"noopener\">https://www.nowcoder.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>累积推荐程序员值得关注的一些网站，会持续更新。前后无排名：  </p>\n<p><strong>1. 牛客网：常见的算法、大厂面试题，支持在线刷题，程序员求职利器：</strong><br><a href=\"https://www.nowcoder.com/\" target=\"_blank\" rel=\"noopener\">https://www.nowcoder.com/</a></p>\n"},{"title":"每日计划","date":"2020-06-17T06:05:38.649Z","mode":"normal","random_max":110,"random_url":"https://sariay.github.io/Random-img/","_content":"\n### 2020年6月12日 周五 学习清单\n\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n| <input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"> | 链表-LUR缓存 | 极客时间-数据结构与算法之美 | 链表的基础知识，LRU的基本思想。适合初学者，不适合高阶提升 |\n| <input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"> | 链表-6大技巧 | 极客时间-数据结构与算法之美 | 作者给出的链表编写时可以注意和建议的点。初学者入门提醒 |\n|<input type=\"checkbox\" > | 栈 | 极客时间-数据结构与算法之美 | 50% |\n|<input type=\"checkbox\"> | 队列 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 排序-插入&冒泡 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 线性排序 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 二分查找-快排查找 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 二分查找-定位IP省份 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | 已完成：【入门】求给定二叉树的最大深度 |\n\n插曲：与闺蜜一起吃完饭，刷浏览器，回去看娃\n","source":"_posts/study/20200612.md","raw":"---\ntitle: 每日计划  \ndate: '2020年06月12日'  \ntags: 学习清单\ncategories: 每日计划\nmode: normal #normal or random\n#normal_url: /img/1.jpg\nrandom_max: 110\nrandom_url: https://sariay.github.io/Random-img/\n---\n\n### 2020年6月12日 周五 学习清单\n\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n| <input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"> | 链表-LUR缓存 | 极客时间-数据结构与算法之美 | 链表的基础知识，LRU的基本思想。适合初学者，不适合高阶提升 |\n| <input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"> | 链表-6大技巧 | 极客时间-数据结构与算法之美 | 作者给出的链表编写时可以注意和建议的点。初学者入门提醒 |\n|<input type=\"checkbox\" > | 栈 | 极客时间-数据结构与算法之美 | 50% |\n|<input type=\"checkbox\"> | 队列 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 排序-插入&冒泡 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 线性排序 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 二分查找-快排查找 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 二分查找-定位IP省份 | 极客时间-数据结构与算法之美 | 未完成 |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | 已完成：【入门】求给定二叉树的最大深度 |\n\n插曲：与闺蜜一起吃完饭，刷浏览器，回去看娃\n","slug":"study/20200612","published":1,"updated":"2020-06-17T06:05:38.649Z","_id":"ckbbscjg2000no8exmzzoq5zj","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"2020年6月12日-周五-学习清单\"><a href=\"#2020年6月12日-周五-学习清单\" class=\"headerlink\" title=\"2020年6月12日 周五 学习清单\"></a>2020年6月12日 周五 学习清单</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>计划学习内容</th>\n<th>内容来源</th>\n<th>实际学习内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"></td>\n<td>链表-LUR缓存</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>链表的基础知识，LRU的基本思想。适合初学者，不适合高阶提升</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"></td>\n<td>链表-6大技巧</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>作者给出的链表编写时可以注意和建议的点。初学者入门提醒</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>栈</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>50%</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>队列</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>排序-插入&amp;冒泡</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>线性排序</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>二分查找-快排查找</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>二分查找-定位IP省份</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>刷一道算法题-LRU</td>\n<td>牛客网</td>\n<td>已完成：【入门】求给定二叉树的最大深度</td>\n</tr>\n</tbody>\n</table>\n<p>插曲：与闺蜜一起吃完饭，刷浏览器，回去看娃</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"2020年6月12日-周五-学习清单\"><a href=\"#2020年6月12日-周五-学习清单\" class=\"headerlink\" title=\"2020年6月12日 周五 学习清单\"></a>2020年6月12日 周五 学习清单</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>计划学习内容</th>\n<th>内容来源</th>\n<th>实际学习内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"></td>\n<td>链表-LUR缓存</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>链表的基础知识，LRU的基本思想。适合初学者，不适合高阶提升</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\" disabled=\"disabled\" checked=\"checked\"></td>\n<td>链表-6大技巧</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>作者给出的链表编写时可以注意和建议的点。初学者入门提醒</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>栈</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>50%</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>队列</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>排序-插入&amp;冒泡</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>线性排序</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>二分查找-快排查找</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>二分查找-定位IP省份</td>\n<td>极客时间-数据结构与算法之美</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>刷一道算法题-LRU</td>\n<td>牛客网</td>\n<td>已完成：【入门】求给定二叉树的最大深度</td>\n</tr>\n</tbody>\n</table>\n<p>插曲：与闺蜜一起吃完饭，刷浏览器，回去看娃</p>\n"},{"title":"每日计划","date":"2020-06-17T07:13:10.082Z","mode":"random","random_max":110,"random_url":"https://sariay.github.io/Random-img/","_content":"\n## 2020年6月17日  周三  晴天\n\n###学习清单\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\">12日遗留 | 栈 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 队列 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 排序-插入&冒泡 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 线性排序 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\">12日遗留 | 二分查找-快排查找 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 二分查找-定位IP省份 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 散列表-单词查找案例 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 散列表-深入理解 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 散列表+链表分析 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 |  |\n\n-----\n\n### 生活清单\n| 完成与否 | 时间 | 计划生活清单 | 实际执行 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\"> | 13:00~19:00 | 学习 | |\n|<input type=\"checkbox\"> | 19:00~21:20 | 做饭、吃饭、洗涮、与儿子视频、洗漱 | |\n|<input type=\"checkbox\"> | 21:30~22:30 | 学习 | |\n|<input type=\"checkbox\"> | 22:30~5:00 | 睡觉 | |\n\n\n<!--\n总结：\n周一学车（1天，上午科目三路训、下午考前训练）；\n周二考科目三（上午考试，未通过，下午老妈住院，调整心态）\n今天上午：刷抖音，与老妈通话\n-->\n","source":"_posts/study/20200617.md","raw":"---\ntitle: 每日计划  \ndate: '2020年06月17日'  \ntags: 学习清单\ncategories: 每日计划\nmode: random #normal or random\n#normal_url: /img/1.jpg\nrandom_max: 110\nrandom_url: https://sariay.github.io/Random-img/\n---\n\n## 2020年6月17日  周三  晴天\n\n###学习清单\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\">12日遗留 | 栈 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 队列 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 排序-插入&冒泡 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 线性排序 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\">12日遗留 | 二分查找-快排查找 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\">12日遗留 | 二分查找-定位IP省份 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 散列表-单词查找案例 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 散列表-深入理解 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 散列表+链表分析 | 极客时间-数据结构与算法之美 |  |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 |  |\n\n-----\n\n### 生活清单\n| 完成与否 | 时间 | 计划生活清单 | 实际执行 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\"> | 13:00~19:00 | 学习 | |\n|<input type=\"checkbox\"> | 19:00~21:20 | 做饭、吃饭、洗涮、与儿子视频、洗漱 | |\n|<input type=\"checkbox\"> | 21:30~22:30 | 学习 | |\n|<input type=\"checkbox\"> | 22:30~5:00 | 睡觉 | |\n\n\n<!--\n总结：\n周一学车（1天，上午科目三路训、下午考前训练）；\n周二考科目三（上午考试，未通过，下午老妈住院，调整心态）\n今天上午：刷抖音，与老妈通话\n-->\n","slug":"study/20200617","published":1,"updated":"2020-06-17T07:13:10.082Z","_id":"ckbj0ky0p0000hdex0g66uvry","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"2020年6月17日-周三-晴天\"><a href=\"#2020年6月17日-周三-晴天\" class=\"headerlink\" title=\"2020年6月17日  周三  晴天\"></a>2020年6月17日  周三  晴天</h2><p>###学习清单<br>| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |<br>| ——- | ——— | ——— | ———– |<br>|<input type=\"checkbox\">12日遗留 | 栈 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 队列 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 排序-插入&amp;冒泡 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 线性排序 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\">12日遗留 | 二分查找-快排查找 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 二分查找-定位IP省份 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 散列表-单词查找案例 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 散列表-深入理解 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 散列表+链表分析 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 |  |</p>\n<hr>\n<h3 id=\"生活清单\"><a href=\"#生活清单\" class=\"headerlink\" title=\"生活清单\"></a>生活清单</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>时间</th>\n<th>计划生活清单</th>\n<th>实际执行</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>13:00~19:00</td>\n<td>学习</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>19:00~21:20</td>\n<td>做饭、吃饭、洗涮、与儿子视频、洗漱</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>21:30~22:30</td>\n<td>学习</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>22:30~5:00</td>\n<td>睡觉</td>\n</tr>\n</tbody>\n</table>\n<!--\n总结：\n周一学车（1天，上午科目三路训、下午考前训练）；\n周二考科目三（上午考试，未通过，下午老妈住院，调整心态）\n今天上午：刷抖音，与老妈通话\n-->\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2020年6月17日-周三-晴天\"><a href=\"#2020年6月17日-周三-晴天\" class=\"headerlink\" title=\"2020年6月17日  周三  晴天\"></a>2020年6月17日  周三  晴天</h2><p>###学习清单<br>| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |<br>| ——- | ——— | ——— | ———– |<br>|<input type=\"checkbox\">12日遗留 | 栈 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 队列 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 排序-插入&amp;冒泡 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 线性排序 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\">12日遗留 | 二分查找-快排查找 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\">12日遗留 | 二分查找-定位IP省份 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 散列表-单词查找案例 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 散列表-深入理解 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 散列表+链表分析 | 极客时间-数据结构与算法之美 |  |<br>|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 |  |</p>\n<hr>\n<h3 id=\"生活清单\"><a href=\"#生活清单\" class=\"headerlink\" title=\"生活清单\"></a>生活清单</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>时间</th>\n<th>计划生活清单</th>\n<th>实际执行</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>13:00~19:00</td>\n<td>学习</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>19:00~21:20</td>\n<td>做饭、吃饭、洗涮、与儿子视频、洗漱</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>21:30~22:30</td>\n<td>学习</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>22:30~5:00</td>\n<td>睡觉</td>\n</tr>\n</tbody>\n</table>\n<!--\n总结：\n周一学车（1天，上午科目三路训、下午考前训练）；\n周二考科目三（上午考试，未通过，下午老妈住院，调整心态）\n今天上午：刷抖音，与老妈通话\n-->\n"},{"title":"每日计划","date":"2020-06-17T07:07:33.559Z","mode":"random","random_max":110,"random_url":"https://sariay.github.io/Random-img/","_content":"\n## 2020年6月18日 周四\n\n###学习清单\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\"> | 哈希算法-数据库防脱库 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 哈希算法-分布式系统的应用 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 二叉树-数组结合 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 二叉树-与散列表的爱恨情仇 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 红黑树-原因 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 红黑树-如何实现 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 递归树 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 堆和堆排序 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 堆的应用 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 图的表示 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 深度与广度优先搜索 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 字符串匹配-哈希实现 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 字符串匹配-案例-文本编辑器中查找 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 字符串匹配-BM&KMP | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | |\n\n-----\n\n### 生活清单时间表\n| 完成与否 | 时间 | 计划生活清单 | 实际执行 |\n| ------- | --------- | --------- |\n|<input type=\"checkbox\"> | 5:00~6:40 | 早起-洗漱、打扫卫生、做饭 | |\n|<input type=\"checkbox\"> | 6:45~7:20 | 吃早饭、洗碗、打扫主卧卫生 |  |\n|<input type=\"checkbox\"> | 7:30~8:50 | 运动20分钟-拉划船机 |  |\n|<input type=\"checkbox\"> | 8:00~11:30 | 学习、给住院的老妈打电话 |  |\n|<input type=\"checkbox\"> | 11:30~12:30 | 做饭、吃饭、洗涮 |  |\n|<input type=\"checkbox\"> | 12:30~13:00 | 自由半小时 |  |\n|<input type=\"checkbox\"> | 13:00~19:00 | 学习 | |\n|<input type=\"checkbox\"> | 19:00~21:20 | 做饭、吃饭、洗涮、与儿子视频、洗漱 | |\n|<input type=\"checkbox\"> | 21:30~22:30 | 看书-《自动驾驶》 | |\n|<input type=\"checkbox\"> | 22:30~5:00 | 睡觉 | |\n","source":"_posts/study/20200618.md","raw":"---\ntitle: 每日计划  \ndate: '2020年06月18日'  \ntags: 学习清单\ncategories: 每日计划\nmode: random #normal or random\n#normal_url: /img/1.jpg\nrandom_max: 110\nrandom_url: https://sariay.github.io/Random-img/\n---\n\n## 2020年6月18日 周四\n\n###学习清单\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\"> | 哈希算法-数据库防脱库 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 哈希算法-分布式系统的应用 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 二叉树-数组结合 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 二叉树-与散列表的爱恨情仇 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 红黑树-原因 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 红黑树-如何实现 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 递归树 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 堆和堆排序 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 堆的应用 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 图的表示 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 深度与广度优先搜索 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 字符串匹配-哈希实现 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 字符串匹配-案例-文本编辑器中查找 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 字符串匹配-BM&KMP | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | |\n\n-----\n\n### 生活清单时间表\n| 完成与否 | 时间 | 计划生活清单 | 实际执行 |\n| ------- | --------- | --------- |\n|<input type=\"checkbox\"> | 5:00~6:40 | 早起-洗漱、打扫卫生、做饭 | |\n|<input type=\"checkbox\"> | 6:45~7:20 | 吃早饭、洗碗、打扫主卧卫生 |  |\n|<input type=\"checkbox\"> | 7:30~8:50 | 运动20分钟-拉划船机 |  |\n|<input type=\"checkbox\"> | 8:00~11:30 | 学习、给住院的老妈打电话 |  |\n|<input type=\"checkbox\"> | 11:30~12:30 | 做饭、吃饭、洗涮 |  |\n|<input type=\"checkbox\"> | 12:30~13:00 | 自由半小时 |  |\n|<input type=\"checkbox\"> | 13:00~19:00 | 学习 | |\n|<input type=\"checkbox\"> | 19:00~21:20 | 做饭、吃饭、洗涮、与儿子视频、洗漱 | |\n|<input type=\"checkbox\"> | 21:30~22:30 | 看书-《自动驾驶》 | |\n|<input type=\"checkbox\"> | 22:30~5:00 | 睡觉 | |\n","slug":"study/20200618","published":1,"updated":"2020-06-17T07:07:33.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj0ky240001hdexkdsoh1ig","content":"<h2 id=\"2020年6月18日-周四\"><a href=\"#2020年6月18日-周四\" class=\"headerlink\" title=\"2020年6月18日 周四\"></a>2020年6月18日 周四</h2><p>###学习清单<br>| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |<br>| ——- | ——— | ——— | ———– |<br>|<input type=\"checkbox\"> | 哈希算法-数据库防脱库 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 哈希算法-分布式系统的应用 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 二叉树-数组结合 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 二叉树-与散列表的爱恨情仇 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 红黑树-原因 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 红黑树-如何实现 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 递归树 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 堆和堆排序 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 堆的应用 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 图的表示 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 深度与广度优先搜索 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 字符串匹配-哈希实现 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 字符串匹配-案例-文本编辑器中查找 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 字符串匹配-BM&amp;KMP | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | |</p>\n<hr>\n<h3 id=\"生活清单时间表\"><a href=\"#生活清单时间表\" class=\"headerlink\" title=\"生活清单时间表\"></a>生活清单时间表</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>时间</th>\n<th>计划生活清单</th>\n<th>实际执行</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>5:00~6:40</td>\n<td>早起-洗漱、打扫卫生、做饭</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>6:45~7:20</td>\n<td>吃早饭、洗碗、打扫主卧卫生</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>7:30~8:50</td>\n<td>运动20分钟-拉划船机</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>8:00~11:30</td>\n<td>学习、给住院的老妈打电话</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>11:30~12:30</td>\n<td>做饭、吃饭、洗涮</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>12:30~13:00</td>\n<td>自由半小时</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>13:00~19:00</td>\n<td>学习</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>19:00~21:20</td>\n<td>做饭、吃饭、洗涮、与儿子视频、洗漱</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>21:30~22:30</td>\n<td>看书-《自动驾驶》</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>22:30~5:00</td>\n<td>睡觉</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2020年6月18日-周四\"><a href=\"#2020年6月18日-周四\" class=\"headerlink\" title=\"2020年6月18日 周四\"></a>2020年6月18日 周四</h2><p>###学习清单<br>| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |<br>| ——- | ——— | ——— | ———– |<br>|<input type=\"checkbox\"> | 哈希算法-数据库防脱库 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 哈希算法-分布式系统的应用 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 二叉树-数组结合 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 二叉树-与散列表的爱恨情仇 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 红黑树-原因 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 红黑树-如何实现 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 递归树 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 堆和堆排序 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 堆的应用 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 图的表示 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 深度与广度优先搜索 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 字符串匹配-哈希实现 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 字符串匹配-案例-文本编辑器中查找 | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 字符串匹配-BM&amp;KMP | 极客时间-数据结构与算法之美 | |<br>|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | |</p>\n<hr>\n<h3 id=\"生活清单时间表\"><a href=\"#生活清单时间表\" class=\"headerlink\" title=\"生活清单时间表\"></a>生活清单时间表</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>时间</th>\n<th>计划生活清单</th>\n<th>实际执行</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>5:00~6:40</td>\n<td>早起-洗漱、打扫卫生、做饭</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>6:45~7:20</td>\n<td>吃早饭、洗碗、打扫主卧卫生</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>7:30~8:50</td>\n<td>运动20分钟-拉划船机</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>8:00~11:30</td>\n<td>学习、给住院的老妈打电话</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>11:30~12:30</td>\n<td>做饭、吃饭、洗涮</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>12:30~13:00</td>\n<td>自由半小时</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>13:00~19:00</td>\n<td>学习</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>19:00~21:20</td>\n<td>做饭、吃饭、洗涮、与儿子视频、洗漱</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>21:30~22:30</td>\n<td>看书-《自动驾驶》</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>22:30~5:00</td>\n<td>睡觉</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"每日计划","date":"2020-06-17T06:15:48.548Z","mode":"random","random_max":110,"random_url":"https://sariay.github.io/Random-img/","_content":"\n### 2020年6月18日 周五 学习清单\n\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\"> | Trie树 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | AC自动机 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 贪心算法 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 分治算法 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 回溯算法 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 初识动态规划 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 动态规划理论 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 动态规划实战 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 拓扑排序 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 最短路径 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 位图 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 概率统计 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 向量空间 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | B+树 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | |\n","source":"_posts/study/20200619.md","raw":"---\ntitle: 每日计划  \ndate: '2020年06月19日'  \ntags: 学习清单\ncategories: 每日计划\nmode: random #normal or random\n#normal_url: /img/1.jpg\nrandom_max: 110\nrandom_url: https://sariay.github.io/Random-img/\n---\n\n### 2020年6月18日 周五 学习清单\n\n| 完成与否 | 计划学习内容 | 内容来源   | 实际学习内容 |\n| ------- | --------- | --------- | ----------- |\n|<input type=\"checkbox\"> | Trie树 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | AC自动机 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 贪心算法 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 分治算法 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 回溯算法 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 初识动态规划 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 动态规划理论 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 动态规划实战 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 拓扑排序 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 最短路径 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 位图 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 概率统计 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 向量空间 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | B+树 | 极客时间-数据结构与算法之美 | |\n|<input type=\"checkbox\"> | 刷一道算法题-LRU | 牛客网 | |\n","slug":"study/20200619","published":1,"updated":"2020-06-17T06:15:48.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckbj0ky2c0003hdexxk1glg62","content":"<h3 id=\"2020年6月18日-周五-学习清单\"><a href=\"#2020年6月18日-周五-学习清单\" class=\"headerlink\" title=\"2020年6月18日 周五 学习清单\"></a>2020年6月18日 周五 学习清单</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>计划学习内容</th>\n<th>内容来源</th>\n<th>实际学习内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>Trie树</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>AC自动机</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>贪心算法</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>分治算法</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>回溯算法</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>初识动态规划</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>动态规划理论</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>动态规划实战</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>拓扑排序</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>最短路径</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>位图</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>概率统计</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>向量空间</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>B+树</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>刷一道算法题-LRU</td>\n<td>牛客网</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"2020年6月18日-周五-学习清单\"><a href=\"#2020年6月18日-周五-学习清单\" class=\"headerlink\" title=\"2020年6月18日 周五 学习清单\"></a>2020年6月18日 周五 学习清单</h3><table>\n<thead>\n<tr>\n<th>完成与否</th>\n<th>计划学习内容</th>\n<th>内容来源</th>\n<th>实际学习内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>Trie树</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>AC自动机</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>贪心算法</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>分治算法</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>回溯算法</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>初识动态规划</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>动态规划理论</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>动态规划实战</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>拓扑排序</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>最短路径</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>位图</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>概率统计</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>向量空间</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>B+树</td>\n<td>极客时间-数据结构与算法之美</td>\n<td></td>\n</tr>\n<tr>\n<td><input type=\"checkbox\"></td>\n<td>刷一道算法题-LRU</td>\n<td>牛客网</td>\n</tr>\n</tbody>\n</table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckbbscjdt0001o8exfaerxmqt","category_id":"ckbbscje20004o8exnis6vvsf","_id":"ckbbscjea000ao8excesrppor"},{"post_id":"ckbbscjdz0003o8ex4lg0os60","category_id":"ckbbscje70007o8exil2ytwlb","_id":"ckbbscjeb000co8exopsbiuym"},{"post_id":"ckbbscjfq000do8exfe68i8e4","category_id":"ckbbscjft000fo8ex5l15k3iu","_id":"ckbbscjg4000oo8ex0wnx8at6"},{"post_id":"ckbbscjfs000eo8exxbn9g0fh","category_id":"ckbbscjg1000ko8ex8yhfnraz","_id":"ckbbscjg8000to8ex6rv7jl12"},{"post_id":"ckbbscjfu000ho8ex79dbfpa5","category_id":"ckbbscjg1000ko8ex8yhfnraz","_id":"ckbbscjga000xo8exnebkosty"},{"post_id":"ckbbscjfw000io8exsn64ksby","category_id":"ckbbscjg1000ko8ex8yhfnraz","_id":"ckbbscjgb0010o8exorrgcthx"},{"post_id":"ckbbscjfz000jo8exh04s2cfz","category_id":"ckbbscjg9000wo8exxdlxowbw","_id":"ckbbscjgd0014o8ex6gf3cb93"},{"post_id":"ckbbscjg2000no8exmzzoq5zj","category_id":"ckbbscjgb0011o8exuj2sofqd","_id":"ckbbscjge0016o8ex63mgm1ig"},{"post_id":"ckbj0ky0p0000hdex0g66uvry","category_id":"ckbbscjgb0011o8exuj2sofqd","_id":"ckbj0ky2m0005hdexi7h3x3ec"},{"post_id":"ckbj0ky240001hdexkdsoh1ig","category_id":"ckbbscjgb0011o8exuj2sofqd","_id":"ckbj0ky2n0007hdexpzwewtnr"},{"post_id":"ckbj0ky2c0003hdexxk1glg62","category_id":"ckbbscjgb0011o8exuj2sofqd","_id":"ckbj0ky2o0008hdexjeku0nt8"}],"PostTag":[{"post_id":"ckbbscjdt0001o8exfaerxmqt","tag_id":"ckbbscje40005o8exg1gezlmg","_id":"ckbbscje90009o8exnorajdoh"},{"post_id":"ckbbscjdz0003o8ex4lg0os60","tag_id":"ckbbscje80008o8exb1itomlj","_id":"ckbbscjea000bo8exgjx00owv"},{"post_id":"ckbbscjfq000do8exfe68i8e4","tag_id":"ckbbscjfu000go8exauh06g9m","_id":"ckbbscjg2000mo8exg15wb5zo"},{"post_id":"ckbbscjfs000eo8exxbn9g0fh","tag_id":"ckbbscjg1000lo8exclmcn1i1","_id":"ckbbscjg7000ro8ex1nsuwkxb"},{"post_id":"ckbbscjfu000ho8ex79dbfpa5","tag_id":"ckbbscjg1000lo8exclmcn1i1","_id":"ckbbscjg9000vo8exkz0p189c"},{"post_id":"ckbbscjfw000io8exsn64ksby","tag_id":"ckbbscjg1000lo8exclmcn1i1","_id":"ckbbscjgb000zo8exxva1mf4s"},{"post_id":"ckbbscjfz000jo8exh04s2cfz","tag_id":"ckbbscjga000yo8exp2s87u3a","_id":"ckbbscjgc0013o8exqfb36vkx"},{"post_id":"ckbbscjg2000no8exmzzoq5zj","tag_id":"ckbbscjgc0012o8exptmk1ksk","_id":"ckbbscjgd0015o8ex1u2ebe56"},{"post_id":"ckbj0ky0p0000hdex0g66uvry","tag_id":"ckbbscjgc0012o8exptmk1ksk","_id":"ckbj0ky2b0002hdexwbft14zl"},{"post_id":"ckbj0ky240001hdexkdsoh1ig","tag_id":"ckbbscjgc0012o8exptmk1ksk","_id":"ckbj0ky2j0004hdex6wkj3swg"},{"post_id":"ckbj0ky2c0003hdexxk1glg62","tag_id":"ckbbscjgc0012o8exptmk1ksk","_id":"ckbj0ky2n0006hdexa6lox5cg"}],"Tag":[{"name":"php 框架 lumen API","_id":"ckbbscje40005o8exg1gezlmg"},{"name":"nginx 负载均衡 配置","_id":"ckbbscje80008o8exb1itomlj"},{"name":"nginx","_id":"ckbbscjfu000go8exauh06g9m"},{"name":"读书摘录 区块链","_id":"ckbbscjg1000lo8exclmcn1i1"},{"name":"程序员-优秀网站","_id":"ckbbscjga000yo8exp2s87u3a"},{"name":"学习清单","_id":"ckbbscjgc0012o8exptmk1ksk"}]}}